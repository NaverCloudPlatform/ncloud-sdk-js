/*
* vserver
* VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CommonCode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CommonCode'));
  } else {
    // Browser globals (root is window)
    if (!root.Vserver) {
      root.Vserver = {};
    }
    root.Vserver.BlockStorageInstance = factory(root.Vserver.ApiClient, root.Vserver.CommonCode);
  }
}(this, function(ApiClient, CommonCode) {
  'use strict';




  /**
   * The BlockStorageInstance model module.
   * @module model/BlockStorageInstance
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>BlockStorageInstance</code>.
   * @alias module:model/BlockStorageInstance
   * @class
   */
  var exports = function() {
    var _this = this;



















  };

  /**
   * Constructs a <code>BlockStorageInstance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BlockStorageInstance} obj Optional instance to populate.
   * @return {module:model/BlockStorageInstance} The populated <code>BlockStorageInstance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('blockStorageInstanceNo')) {
        obj['blockStorageInstanceNo'] = ApiClient.convertToType(data['blockStorageInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('serverInstanceNo')) {
        obj['serverInstanceNo'] = ApiClient.convertToType(data['serverInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('blockStorageName')) {
        obj['blockStorageName'] = ApiClient.convertToType(data['blockStorageName'], 'String');
      }
      if (data.hasOwnProperty('blockStorageType')) {
        obj['blockStorageType'] = CommonCode.constructFromObject(data['blockStorageType']);
      }
      if (data.hasOwnProperty('blockStorageSize')) {
        obj['blockStorageSize'] = ApiClient.convertToType(data['blockStorageSize'], 'Number');
      }
      if (data.hasOwnProperty('deviceName')) {
        obj['deviceName'] = ApiClient.convertToType(data['deviceName'], 'String');
      }
      if (data.hasOwnProperty('blockStorageProductCode')) {
        obj['blockStorageProductCode'] = ApiClient.convertToType(data['blockStorageProductCode'], 'String');
      }
      if (data.hasOwnProperty('blockStorageInstanceStatus')) {
        obj['blockStorageInstanceStatus'] = CommonCode.constructFromObject(data['blockStorageInstanceStatus']);
      }
      if (data.hasOwnProperty('blockStorageInstanceOperation')) {
        obj['blockStorageInstanceOperation'] = CommonCode.constructFromObject(data['blockStorageInstanceOperation']);
      }
      if (data.hasOwnProperty('blockStorageInstanceStatusName')) {
        obj['blockStorageInstanceStatusName'] = ApiClient.convertToType(data['blockStorageInstanceStatusName'], 'String');
      }
      if (data.hasOwnProperty('createDate')) {
        obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
      }
      if (data.hasOwnProperty('blockStorageDescription')) {
        obj['blockStorageDescription'] = ApiClient.convertToType(data['blockStorageDescription'], 'String');
      }
      if (data.hasOwnProperty('blockStorageDiskType')) {
        obj['blockStorageDiskType'] = CommonCode.constructFromObject(data['blockStorageDiskType']);
      }
      if (data.hasOwnProperty('blockStorageDiskDetailType')) {
        obj['blockStorageDiskDetailType'] = CommonCode.constructFromObject(data['blockStorageDiskDetailType']);
      }
      if (data.hasOwnProperty('maxIopsThroughput')) {
        obj['maxIopsThroughput'] = ApiClient.convertToType(data['maxIopsThroughput'], 'Number');
      }
      if (data.hasOwnProperty('isEncryptedVolume')) {
        obj['isEncryptedVolume'] = ApiClient.convertToType(data['isEncryptedVolume'], 'Boolean');
      }
      if (data.hasOwnProperty('zoneCode')) {
        obj['zoneCode'] = ApiClient.convertToType(data['zoneCode'], 'String');
      }
      if (data.hasOwnProperty('regionCode')) {
        obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
      }
    }
    return obj;
  }

  /**
   * 블록스토리지인스턴스번호
   * @member {String} blockStorageInstanceNo
   */
  exports.prototype['blockStorageInstanceNo'] = undefined;
  /**
   * 서버인스턴스번호
   * @member {String} serverInstanceNo
   */
  exports.prototype['serverInstanceNo'] = undefined;
  /**
   * 블록스토리지이름
   * @member {String} blockStorageName
   */
  exports.prototype['blockStorageName'] = undefined;
  /**
   * 블록스토리지유형
   * @member {module:model/CommonCode} blockStorageType
   */
  exports.prototype['blockStorageType'] = undefined;
  /**
   * 블록스토리지사이즈
   * @member {Number} blockStorageSize
   */
  exports.prototype['blockStorageSize'] = undefined;
  /**
   * 디바이스이름
   * @member {String} deviceName
   */
  exports.prototype['deviceName'] = undefined;
  /**
   * 블록스토리지상품코드
   * @member {String} blockStorageProductCode
   */
  exports.prototype['blockStorageProductCode'] = undefined;
  /**
   * 블록스토리지인스턴스상태
   * @member {module:model/CommonCode} blockStorageInstanceStatus
   */
  exports.prototype['blockStorageInstanceStatus'] = undefined;
  /**
   * 블록스토리지인스턴스OP
   * @member {module:model/CommonCode} blockStorageInstanceOperation
   */
  exports.prototype['blockStorageInstanceOperation'] = undefined;
  /**
   * 블록스토리지인스턴스상태이름
   * @member {String} blockStorageInstanceStatusName
   */
  exports.prototype['blockStorageInstanceStatusName'] = undefined;
  /**
   * 생성일시
   * @member {String} createDate
   */
  exports.prototype['createDate'] = undefined;
  /**
   * 블록스토리지설명
   * @member {String} blockStorageDescription
   */
  exports.prototype['blockStorageDescription'] = undefined;
  /**
   * 블록스토리지디스크유형
   * @member {module:model/CommonCode} blockStorageDiskType
   */
  exports.prototype['blockStorageDiskType'] = undefined;
  /**
   * 블록스토리지디스크상세유형
   * @member {module:model/CommonCode} blockStorageDiskDetailType
   */
  exports.prototype['blockStorageDiskDetailType'] = undefined;
  /**
   * 최대IOPS
   * @member {Number} maxIopsThroughput
   */
  exports.prototype['maxIopsThroughput'] = undefined;
  /**
   * 볼륨암호화여부
   * @member {Boolean} isEncryptedVolume
   */
  exports.prototype['isEncryptedVolume'] = undefined;
  /**
   * ZONE코드
   * @member {String} zoneCode
   */
  exports.prototype['zoneCode'] = undefined;
  /**
   * REGION코드
   * @member {String} regionCode
   */
  exports.prototype['regionCode'] = undefined;



  return exports;
}));


