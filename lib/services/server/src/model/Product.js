/*
* server
* <br/>https://ncloud.apigw.ntruss.com/server/v2
*
* OpenAPI spec version: 2018-07-02T09:06:17Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CommonCode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CommonCode'));
  } else {
    // Browser globals (root is window)
    if (!root.Server) {
      root.Server = {};
    }
    root.Server.Product = factory(root.Server.ApiClient, root.Server.CommonCode);
  }
}(this, function(ApiClient, CommonCode) {
  'use strict';




  /**
   * The Product model module.
   * @module model/Product
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Product</code>.
   * @alias module:model/Product
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Product} obj Optional instance to populate.
   * @return {module:model/Product} The populated <code>Product</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('productCode')) {
        obj['productCode'] = ApiClient.convertToType(data['productCode'], 'String');
      }
      if (data.hasOwnProperty('productName')) {
        obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
      }
      if (data.hasOwnProperty('productType')) {
        obj['productType'] = CommonCode.constructFromObject(data['productType']);
      }
      if (data.hasOwnProperty('productDescription')) {
        obj['productDescription'] = ApiClient.convertToType(data['productDescription'], 'String');
      }
      if (data.hasOwnProperty('infraResourceType')) {
        obj['infraResourceType'] = CommonCode.constructFromObject(data['infraResourceType']);
      }
      if (data.hasOwnProperty('infraResourceDetailType')) {
        obj['infraResourceDetailType'] = CommonCode.constructFromObject(data['infraResourceDetailType']);
      }
      if (data.hasOwnProperty('cpuCount')) {
        obj['cpuCount'] = ApiClient.convertToType(data['cpuCount'], 'Number');
      }
      if (data.hasOwnProperty('memorySize')) {
        obj['memorySize'] = ApiClient.convertToType(data['memorySize'], 'Number');
      }
      if (data.hasOwnProperty('baseBlockStorageSize')) {
        obj['baseBlockStorageSize'] = ApiClient.convertToType(data['baseBlockStorageSize'], 'Number');
      }
      if (data.hasOwnProperty('platformType')) {
        obj['platformType'] = CommonCode.constructFromObject(data['platformType']);
      }
      if (data.hasOwnProperty('osInformation')) {
        obj['osInformation'] = ApiClient.convertToType(data['osInformation'], 'String');
      }
      if (data.hasOwnProperty('diskType')) {
        obj['diskType'] = CommonCode.constructFromObject(data['diskType']);
      }
      if (data.hasOwnProperty('dbKindCode')) {
        obj['dbKindCode'] = ApiClient.convertToType(data['dbKindCode'], 'String');
      }
      if (data.hasOwnProperty('addBlockStorageSize')) {
        obj['addBlockStorageSize'] = ApiClient.convertToType(data['addBlockStorageSize'], 'Number');
      }
    }
    return obj;
  }

  /**
   * 상품코드
   * @member {String} productCode
   */
  exports.prototype['productCode'] = undefined;
  /**
   * 상품명
   * @member {String} productName
   */
  exports.prototype['productName'] = undefined;
  /**
   * 상품유형
   * @member {module:model/CommonCode} productType
   */
  exports.prototype['productType'] = undefined;
  /**
   * 상품설명
   * @member {String} productDescription
   */
  exports.prototype['productDescription'] = undefined;
  /**
   * 인프라자원구분
   * @member {module:model/CommonCode} infraResourceType
   */
  exports.prototype['infraResourceType'] = undefined;
  /**
   * 인프라자원상세구분
   * @member {module:model/CommonCode} infraResourceDetailType
   */
  exports.prototype['infraResourceDetailType'] = undefined;
  /**
   * CPU수
   * @member {Number} cpuCount
   */
  exports.prototype['cpuCount'] = undefined;
  /**
   * 메모리사이즈
   * @member {Number} memorySize
   */
  exports.prototype['memorySize'] = undefined;
  /**
   * 기본블록스토리지사이즈
   * @member {Number} baseBlockStorageSize
   */
  exports.prototype['baseBlockStorageSize'] = undefined;
  /**
   * 플랫폼구분
   * @member {module:model/CommonCode} platformType
   */
  exports.prototype['platformType'] = undefined;
  /**
   * OS정보
   * @member {String} osInformation
   */
  exports.prototype['osInformation'] = undefined;
  /**
   * 디스크유형
   * @member {module:model/CommonCode} diskType
   */
  exports.prototype['diskType'] = undefined;
  /**
   * DB유형코드
   * @member {String} dbKindCode
   */
  exports.prototype['dbKindCode'] = undefined;
  /**
   * 추가블록스토리지사이즈
   * @member {Number} addBlockStorageSize
   */
  exports.prototype['addBlockStorageSize'] = undefined;



  return exports;
}));


