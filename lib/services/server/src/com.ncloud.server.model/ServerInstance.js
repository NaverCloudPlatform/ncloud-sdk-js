/*
* server
* <br/>https://ncloud.apigw.ntruss.com/server/v2
*
* OpenAPI spec version: 2018-06-21T02:18:25Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ncloud.server.model/AccessControlGroup', 'com.ncloud.server.model/CommonCode', 'com.ncloud.server.model/Region', 'com.ncloud.server.model/Zone'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccessControlGroup'), require('./CommonCode'), require('./Region'), require('./Zone'));
  } else {
    // Browser globals (root is window)
    if (!root.Server) {
      root.Server = {};
    }
    root.Server.ServerInstance = factory(root.Server.ApiClient, root.Server.AccessControlGroup, root.Server.CommonCode, root.Server.Region, root.Server.Zone);
  }
}(this, function(ApiClient, AccessControlGroup, CommonCode, Region, Zone) {
  'use strict';




  /**
   * The ServerInstance model module.
   * @module com.ncloud.server.model/ServerInstance
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ServerInstance</code>.
   * @alias module:com.ncloud.server.model/ServerInstance
   * @class
   */
  var exports = function() {
    var _this = this;
































  };

  /**
   * Constructs a <code>ServerInstance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ncloud.server.model/ServerInstance} obj Optional instance to populate.
   * @return {module:com.ncloud.server.model/ServerInstance} The populated <code>ServerInstance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('serverInstanceNo')) {
        obj['serverInstanceNo'] = ApiClient.convertToType(data['serverInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('serverName')) {
        obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
      }
      if (data.hasOwnProperty('serverDescription')) {
        obj['serverDescription'] = ApiClient.convertToType(data['serverDescription'], 'String');
      }
      if (data.hasOwnProperty('cpuCount')) {
        obj['cpuCount'] = ApiClient.convertToType(data['cpuCount'], 'Number');
      }
      if (data.hasOwnProperty('memorySize')) {
        obj['memorySize'] = ApiClient.convertToType(data['memorySize'], 'Number');
      }
      if (data.hasOwnProperty('baseBlockStorageSize')) {
        obj['baseBlockStorageSize'] = ApiClient.convertToType(data['baseBlockStorageSize'], 'Number');
      }
      if (data.hasOwnProperty('platformType')) {
        obj['platformType'] = CommonCode.constructFromObject(data['platformType']);
      }
      if (data.hasOwnProperty('loginKeyName')) {
        obj['loginKeyName'] = ApiClient.convertToType(data['loginKeyName'], 'String');
      }
      if (data.hasOwnProperty('isFeeChargingMonitoring')) {
        obj['isFeeChargingMonitoring'] = ApiClient.convertToType(data['isFeeChargingMonitoring'], 'Boolean');
      }
      if (data.hasOwnProperty('publicIp')) {
        obj['publicIp'] = ApiClient.convertToType(data['publicIp'], 'String');
      }
      if (data.hasOwnProperty('privateIp')) {
        obj['privateIp'] = ApiClient.convertToType(data['privateIp'], 'String');
      }
      if (data.hasOwnProperty('serverImageName')) {
        obj['serverImageName'] = ApiClient.convertToType(data['serverImageName'], 'String');
      }
      if (data.hasOwnProperty('serverInstanceStatus')) {
        obj['serverInstanceStatus'] = CommonCode.constructFromObject(data['serverInstanceStatus']);
      }
      if (data.hasOwnProperty('serverInstanceOperation')) {
        obj['serverInstanceOperation'] = CommonCode.constructFromObject(data['serverInstanceOperation']);
      }
      if (data.hasOwnProperty('serverInstanceStatusName')) {
        obj['serverInstanceStatusName'] = ApiClient.convertToType(data['serverInstanceStatusName'], 'String');
      }
      if (data.hasOwnProperty('createDate')) {
        obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
      }
      if (data.hasOwnProperty('uptime')) {
        obj['uptime'] = ApiClient.convertToType(data['uptime'], 'String');
      }
      if (data.hasOwnProperty('serverImageProductCode')) {
        obj['serverImageProductCode'] = ApiClient.convertToType(data['serverImageProductCode'], 'String');
      }
      if (data.hasOwnProperty('serverProductCode')) {
        obj['serverProductCode'] = ApiClient.convertToType(data['serverProductCode'], 'String');
      }
      if (data.hasOwnProperty('isProtectServerTermination')) {
        obj['isProtectServerTermination'] = ApiClient.convertToType(data['isProtectServerTermination'], 'Boolean');
      }
      if (data.hasOwnProperty('portForwardingPublicIp')) {
        obj['portForwardingPublicIp'] = ApiClient.convertToType(data['portForwardingPublicIp'], 'String');
      }
      if (data.hasOwnProperty('portForwardingExternalPort')) {
        obj['portForwardingExternalPort'] = ApiClient.convertToType(data['portForwardingExternalPort'], 'Number');
      }
      if (data.hasOwnProperty('portForwardingInternalPort')) {
        obj['portForwardingInternalPort'] = ApiClient.convertToType(data['portForwardingInternalPort'], 'Number');
      }
      if (data.hasOwnProperty('zone')) {
        obj['zone'] = Zone.constructFromObject(data['zone']);
      }
      if (data.hasOwnProperty('region')) {
        obj['region'] = Region.constructFromObject(data['region']);
      }
      if (data.hasOwnProperty('baseBlockStorageDiskType')) {
        obj['baseBlockStorageDiskType'] = CommonCode.constructFromObject(data['baseBlockStorageDiskType']);
      }
      if (data.hasOwnProperty('baseBlockStroageDiskDetailType')) {
        obj['baseBlockStroageDiskDetailType'] = CommonCode.constructFromObject(data['baseBlockStroageDiskDetailType']);
      }
      if (data.hasOwnProperty('internetLineType')) {
        obj['internetLineType'] = CommonCode.constructFromObject(data['internetLineType']);
      }
      if (data.hasOwnProperty('serverInstanceType')) {
        obj['serverInstanceType'] = CommonCode.constructFromObject(data['serverInstanceType']);
      }
      if (data.hasOwnProperty('userData')) {
        obj['userData'] = ApiClient.convertToType(data['userData'], 'String');
      }
      if (data.hasOwnProperty('accessControlGroupList')) {
        obj['accessControlGroupList'] = ApiClient.convertToType(data['accessControlGroupList'], [AccessControlGroup]);
      }
    }
    return obj;
  }

  /**
   * 서버인스턴스번호
   * @member {String} serverInstanceNo
   */
  exports.prototype['serverInstanceNo'] = undefined;
  /**
   * 서버명
   * @member {String} serverName
   */
  exports.prototype['serverName'] = undefined;
  /**
   * 서버설명
   * @member {String} serverDescription
   */
  exports.prototype['serverDescription'] = undefined;
  /**
   * CPU수
   * @member {Number} cpuCount
   */
  exports.prototype['cpuCount'] = undefined;
  /**
   * 메모리사이즈
   * @member {Number} memorySize
   */
  exports.prototype['memorySize'] = undefined;
  /**
   * 기본블럭스토리지사이즈
   * @member {Number} baseBlockStorageSize
   */
  exports.prototype['baseBlockStorageSize'] = undefined;
  /**
   * 플랫폼구분
   * @member {module:com.ncloud.server.model/CommonCode} platformType
   */
  exports.prototype['platformType'] = undefined;
  /**
   * 로그인키명
   * @member {String} loginKeyName
   */
  exports.prototype['loginKeyName'] = undefined;
  /**
   * 유료모니터링여부
   * @member {Boolean} isFeeChargingMonitoring
   */
  exports.prototype['isFeeChargingMonitoring'] = undefined;
  /**
   * 공인IP
   * @member {String} publicIp
   */
  exports.prototype['publicIp'] = undefined;
  /**
   * 사설IP
   * @member {String} privateIp
   */
  exports.prototype['privateIp'] = undefined;
  /**
   * 서버이미지명
   * @member {String} serverImageName
   */
  exports.prototype['serverImageName'] = undefined;
  /**
   * 서버인스턴스상태
   * @member {module:com.ncloud.server.model/CommonCode} serverInstanceStatus
   */
  exports.prototype['serverInstanceStatus'] = undefined;
  /**
   * 서버인스턴스OP
   * @member {module:com.ncloud.server.model/CommonCode} serverInstanceOperation
   */
  exports.prototype['serverInstanceOperation'] = undefined;
  /**
   * 서버인스턴스상태명
   * @member {String} serverInstanceStatusName
   */
  exports.prototype['serverInstanceStatusName'] = undefined;
  /**
   * 생성일자
   * @member {String} createDate
   */
  exports.prototype['createDate'] = undefined;
  /**
   * UPTIME
   * @member {String} uptime
   */
  exports.prototype['uptime'] = undefined;
  /**
   * 서버이미지상품코드
   * @member {String} serverImageProductCode
   */
  exports.prototype['serverImageProductCode'] = undefined;
  /**
   * 서버상품코드
   * @member {String} serverProductCode
   */
  exports.prototype['serverProductCode'] = undefined;
  /**
   * 반납보호여부
   * @member {Boolean} isProtectServerTermination
   */
  exports.prototype['isProtectServerTermination'] = undefined;
  /**
   * portForwarding 공인 Ip
   * @member {String} portForwardingPublicIp
   */
  exports.prototype['portForwardingPublicIp'] = undefined;
  /**
   * portForwarding 외부 포트
   * @member {Number} portForwardingExternalPort
   */
  exports.prototype['portForwardingExternalPort'] = undefined;
  /**
   * portForwarding 내부 포트
   * @member {Number} portForwardingInternalPort
   */
  exports.prototype['portForwardingInternalPort'] = undefined;
  /**
   * Zone
   * @member {module:com.ncloud.server.model/Zone} zone
   */
  exports.prototype['zone'] = undefined;
  /**
   * 리전
   * @member {module:com.ncloud.server.model/Region} region
   */
  exports.prototype['region'] = undefined;
  /**
   * 기본블록스토리지디스크유형
   * @member {module:com.ncloud.server.model/CommonCode} baseBlockStorageDiskType
   */
  exports.prototype['baseBlockStorageDiskType'] = undefined;
  /**
   * 기본블록스토리지디스크상세유형
   * @member {module:com.ncloud.server.model/CommonCode} baseBlockStroageDiskDetailType
   */
  exports.prototype['baseBlockStroageDiskDetailType'] = undefined;
  /**
   * 인터넷라인구분
   * @member {module:com.ncloud.server.model/CommonCode} internetLineType
   */
  exports.prototype['internetLineType'] = undefined;
  /**
   * 서버인스턴스구분
   * @member {module:com.ncloud.server.model/CommonCode} serverInstanceType
   */
  exports.prototype['serverInstanceType'] = undefined;
  /**
   * 사용자데이타
   * @member {String} userData
   */
  exports.prototype['userData'] = undefined;
  /**
   * ACG리스트
   * @member {Array.<module:com.ncloud.server.model/AccessControlGroup>} accessControlGroupList
   */
  exports.prototype['accessControlGroupList'] = undefined;



  return exports;
}));


