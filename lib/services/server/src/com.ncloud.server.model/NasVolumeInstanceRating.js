/*
* server
* <br/>https://ncloud.beta-apigw.ntruss.com/server/v2
*
* OpenAPI spec version: 2018-06-20T07:09:00Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Server) {
      root.Server = {};
    }
    root.Server.NasVolumeInstanceRating = factory(root.Server.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The NasVolumeInstanceRating model module.
   * @module com.ncloud.server.model/NasVolumeInstanceRating
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>NasVolumeInstanceRating</code>.
   * @alias module:com.ncloud.server.model/NasVolumeInstanceRating
   * @class
   */
  var exports = function() {
    var _this = this;






















  };

  /**
   * Constructs a <code>NasVolumeInstanceRating</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ncloud.server.model/NasVolumeInstanceRating} obj Optional instance to populate.
   * @return {module:com.ncloud.server.model/NasVolumeInstanceRating} The populated <code>NasVolumeInstanceRating</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('ratingTime')) {
        obj['ratingTime'] = ApiClient.convertToType(data['ratingTime'], 'String');
      }
      if (data.hasOwnProperty('volumeSize')) {
        obj['volumeSize'] = ApiClient.convertToType(data['volumeSize'], 'Number');
      }
      if (data.hasOwnProperty('volumeUseSize')) {
        obj['volumeUseSize'] = ApiClient.convertToType(data['volumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('volumeUseRatio')) {
        obj['volumeUseRatio'] = ApiClient.convertToType(data['volumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('averageVolumeSize')) {
        obj['averageVolumeSize'] = ApiClient.convertToType(data['averageVolumeSize'], 'Number');
      }
      if (data.hasOwnProperty('averageVolumeUseSize')) {
        obj['averageVolumeUseSize'] = ApiClient.convertToType(data['averageVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('averageVolumeUseRatio')) {
        obj['averageVolumeUseRatio'] = ApiClient.convertToType(data['averageVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('maxVolumeUseSize')) {
        obj['maxVolumeUseSize'] = ApiClient.convertToType(data['maxVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('maxVolumeUseRatio')) {
        obj['maxVolumeUseRatio'] = ApiClient.convertToType(data['maxVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('minVolumeUseSize')) {
        obj['minVolumeUseSize'] = ApiClient.convertToType(data['minVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('minVolumeUseRatio')) {
        obj['minVolumeUseRatio'] = ApiClient.convertToType(data['minVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeSize')) {
        obj['snapshotVolumeSize'] = ApiClient.convertToType(data['snapshotVolumeSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeUseSize')) {
        obj['snapshotVolumeUseSize'] = ApiClient.convertToType(data['snapshotVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeUseRatio')) {
        obj['snapshotVolumeUseRatio'] = ApiClient.convertToType(data['snapshotVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotAverageVolumeSize')) {
        obj['snapshotAverageVolumeSize'] = ApiClient.convertToType(data['snapshotAverageVolumeSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotAverageVolumeUseSize')) {
        obj['snapshotAverageVolumeUseSize'] = ApiClient.convertToType(data['snapshotAverageVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotAverageVolumeUseRatio')) {
        obj['snapshotAverageVolumeUseRatio'] = ApiClient.convertToType(data['snapshotAverageVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotMaxVolumeUseSize')) {
        obj['snapshotMaxVolumeUseSize'] = ApiClient.convertToType(data['snapshotMaxVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotMaxVolumeUseRatio')) {
        obj['snapshotMaxVolumeUseRatio'] = ApiClient.convertToType(data['snapshotMaxVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotMinVolumeUseSize')) {
        obj['snapshotMinVolumeUseSize'] = ApiClient.convertToType(data['snapshotMinVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotMinVolumeUseRatio')) {
        obj['snapshotMinVolumeUseRatio'] = ApiClient.convertToType(data['snapshotMinVolumeUseRatio'], 'Number');
      }
    }
    return obj;
  }

  /**
   * 측정시간
   * @member {String} ratingTime
   */
  exports.prototype['ratingTime'] = undefined;
  /**
   * 볼륨사이즈
   * @member {Number} volumeSize
   */
  exports.prototype['volumeSize'] = undefined;
  /**
   * 볼륨사용사이즈
   * @member {Number} volumeUseSize
   */
  exports.prototype['volumeUseSize'] = undefined;
  /**
   * 볼륨사용비율
   * @member {Number} volumeUseRatio
   */
  exports.prototype['volumeUseRatio'] = undefined;
  /**
   * 평균볼륨사이즈
   * @member {Number} averageVolumeSize
   */
  exports.prototype['averageVolumeSize'] = undefined;
  /**
   * 평균볼륨사용사이즈
   * @member {Number} averageVolumeUseSize
   */
  exports.prototype['averageVolumeUseSize'] = undefined;
  /**
   * 평균볼륨사용비율
   * @member {Number} averageVolumeUseRatio
   */
  exports.prototype['averageVolumeUseRatio'] = undefined;
  /**
   * 최대볼륨사용사이즈
   * @member {Number} maxVolumeUseSize
   */
  exports.prototype['maxVolumeUseSize'] = undefined;
  /**
   * 최대볼륨사용비율
   * @member {Number} maxVolumeUseRatio
   */
  exports.prototype['maxVolumeUseRatio'] = undefined;
  /**
   * 최소볼륨사용사이즈
   * @member {Number} minVolumeUseSize
   */
  exports.prototype['minVolumeUseSize'] = undefined;
  /**
   * 최소볼륨사용비율
   * @member {Number} minVolumeUseRatio
   */
  exports.prototype['minVolumeUseRatio'] = undefined;
  /**
   * 스냅샷볼륨사이즈
   * @member {Number} snapshotVolumeSize
   */
  exports.prototype['snapshotVolumeSize'] = undefined;
  /**
   * 스냅샷볼륨사용사이즈
   * @member {Number} snapshotVolumeUseSize
   */
  exports.prototype['snapshotVolumeUseSize'] = undefined;
  /**
   * 스냅샷볼륨사용비율
   * @member {Number} snapshotVolumeUseRatio
   */
  exports.prototype['snapshotVolumeUseRatio'] = undefined;
  /**
   * 평균스냅샷볼륨사이즈
   * @member {Number} snapshotAverageVolumeSize
   */
  exports.prototype['snapshotAverageVolumeSize'] = undefined;
  /**
   * 평균스냅샷볼륨사용사이즈
   * @member {Number} snapshotAverageVolumeUseSize
   */
  exports.prototype['snapshotAverageVolumeUseSize'] = undefined;
  /**
   * 평균스냅샷볼륨사용비율
   * @member {Number} snapshotAverageVolumeUseRatio
   */
  exports.prototype['snapshotAverageVolumeUseRatio'] = undefined;
  /**
   * 최대스냅샷볼륨사용사이즈
   * @member {Number} snapshotMaxVolumeUseSize
   */
  exports.prototype['snapshotMaxVolumeUseSize'] = undefined;
  /**
   * 최대스냅샷볼륨사용비율
   * @member {Number} snapshotMaxVolumeUseRatio
   */
  exports.prototype['snapshotMaxVolumeUseRatio'] = undefined;
  /**
   * 최소스냅샷볼륨사용사이즈
   * @member {Number} snapshotMinVolumeUseSize
   */
  exports.prototype['snapshotMinVolumeUseSize'] = undefined;
  /**
   * 최소스냅샷볼륨사용비율
   * @member {Number} snapshotMinVolumeUseRatio
   */
  exports.prototype['snapshotMinVolumeUseRatio'] = undefined;



  return exports;
}));


