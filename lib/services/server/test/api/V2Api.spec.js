/*
* server
* <br/>https://ncloud.apigw.ntruss.com/server/v2
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    factory(require('expect.js'), require('../../src/index'));
  } else {
    factory(root.expect, root.Server);
  }
}(this, function(expect, Server) {
  'use strict';

  var client = new Server.ApiClient({
    accessKey: 'your access key',
    secretKey: 'your secret key'
  });
  var instance = new Server.V2Api(client);

  describe('V2Api', function() {
    describe('addNasVolumeAccessControl', function() {
      it('should call addNasVolumeAccessControl successfully', function(done) {
        //uncomment below and update the code to test addNasVolumeAccessControl
        //instance.addNasVolumeAccessControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('addPortForwardingRules', function() {
      it('should call addPortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test addPortForwardingRules
        //instance.addPortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('associatePublicIpWithServerInstance', function() {
      it('should call associatePublicIpWithServerInstance successfully', function(done) {
        //uncomment below and update the code to test associatePublicIpWithServerInstance
        //instance.associatePublicIpWithServerInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('attachBlockStorageInstance', function() {
      it('should call attachBlockStorageInstance successfully', function(done) {
        //uncomment below and update the code to test attachBlockStorageInstance
        //instance.attachBlockStorageInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('attachNetworkInterface', function() {
      it('should call attachNetworkInterface successfully', function(done) {
        //uncomment below and update the code to test attachNetworkInterface
        //instance.attachNetworkInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('changeBlockStorageVolumeSize', function() {
      it('should call changeBlockStorageVolumeSize successfully', function(done) {
        //uncomment below and update the code to test changeBlockStorageVolumeSize
        //instance.changeBlockStorageVolumeSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('changeNasVolumeSize', function() {
      it('should call changeNasVolumeSize successfully', function(done) {
        //uncomment below and update the code to test changeNasVolumeSize
        //instance.changeNasVolumeSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('changeServerInstanceSpec', function() {
      it('should call changeServerInstanceSpec successfully', function(done) {
        //uncomment below and update the code to test changeServerInstanceSpec
        //instance.changeServerInstanceSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createBlockStorageInstance', function() {
      it('should call createBlockStorageInstance successfully', function(done) {
        //uncomment below and update the code to test createBlockStorageInstance
        //instance.createBlockStorageInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createBlockStorageSnapshotInstance', function() {
      it('should call createBlockStorageSnapshotInstance successfully', function(done) {
        //uncomment below and update the code to test createBlockStorageSnapshotInstance
        //instance.createBlockStorageSnapshotInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createInstanceTags', function() {
      it('should call createInstanceTags successfully', function(done) {
        //uncomment below and update the code to test createInstanceTags
        //instance.createInstanceTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createLoginKey', function() {
      it('should call createLoginKey successfully', function(done) {
        //uncomment below and update the code to test createLoginKey
        //instance.createLoginKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createMemberServerImage', function() {
      it('should call createMemberServerImage successfully', function(done) {
        //uncomment below and update the code to test createMemberServerImage
        //instance.createMemberServerImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createNasVolumeInstance', function() {
      it('should call createNasVolumeInstance successfully', function(done) {
        //uncomment below and update the code to test createNasVolumeInstance
        //instance.createNasVolumeInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createNetworkInterface', function() {
      it('should call createNetworkInterface successfully', function(done) {
        //uncomment below and update the code to test createNetworkInterface
        //instance.createNetworkInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createPublicIpInstance', function() {
      it('should call createPublicIpInstance successfully', function(done) {
        //uncomment below and update the code to test createPublicIpInstance
        //instance.createPublicIpInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createServerInstances', function() {
      it('should call createServerInstances successfully', function(done) {
        //uncomment below and update the code to test createServerInstances
        //instance.createServerInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteBlockStorageInstances', function() {
      it('should call deleteBlockStorageInstances successfully', function(done) {
        //uncomment below and update the code to test deleteBlockStorageInstances
        //instance.deleteBlockStorageInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteBlockStorageSnapshotInstances', function() {
      it('should call deleteBlockStorageSnapshotInstances successfully', function(done) {
        //uncomment below and update the code to test deleteBlockStorageSnapshotInstances
        //instance.deleteBlockStorageSnapshotInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteInstanceTags', function() {
      it('should call deleteInstanceTags successfully', function(done) {
        //uncomment below and update the code to test deleteInstanceTags
        //instance.deleteInstanceTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteLoginKey', function() {
      it('should call deleteLoginKey successfully', function(done) {
        //uncomment below and update the code to test deleteLoginKey
        //instance.deleteLoginKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteMemberServerImages', function() {
      it('should call deleteMemberServerImages successfully', function(done) {
        //uncomment below and update the code to test deleteMemberServerImages
        //instance.deleteMemberServerImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteNasVolumeInstance', function() {
      it('should call deleteNasVolumeInstance successfully', function(done) {
        //uncomment below and update the code to test deleteNasVolumeInstance
        //instance.deleteNasVolumeInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteNetworkInterface', function() {
      it('should call deleteNetworkInterface successfully', function(done) {
        //uncomment below and update the code to test deleteNetworkInterface
        //instance.deleteNetworkInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deletePortForwardingRules', function() {
      it('should call deletePortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test deletePortForwardingRules
        //instance.deletePortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deletePublicIpInstances', function() {
      it('should call deletePublicIpInstances successfully', function(done) {
        //uncomment below and update the code to test deletePublicIpInstances
        //instance.deletePublicIpInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('detachBlockStorageInstances', function() {
      it('should call detachBlockStorageInstances successfully', function(done) {
        //uncomment below and update the code to test detachBlockStorageInstances
        //instance.detachBlockStorageInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('detachNetworkInterface', function() {
      it('should call detachNetworkInterface successfully', function(done) {
        //uncomment below and update the code to test detachNetworkInterface
        //instance.detachNetworkInterface(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('disassociatePublicIpFromServerInstance', function() {
      it('should call disassociatePublicIpFromServerInstance successfully', function(done) {
        //uncomment below and update the code to test disassociatePublicIpFromServerInstance
        //instance.disassociatePublicIpFromServerInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAccessControlGroupList', function() {
      it('should call getAccessControlGroupList successfully', function(done) {
        //uncomment below and update the code to test getAccessControlGroupList
        //instance.getAccessControlGroupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAccessControlGroupServerInstanceList', function() {
      it('should call getAccessControlGroupServerInstanceList successfully', function(done) {
        //uncomment below and update the code to test getAccessControlGroupServerInstanceList
        //instance.getAccessControlGroupServerInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAccessControlRuleList', function() {
      it('should call getAccessControlRuleList successfully', function(done) {
        //uncomment below and update the code to test getAccessControlRuleList
        //instance.getAccessControlRuleList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getBlockStorageInstanceList', function() {
      it('should call getBlockStorageInstanceList successfully', function(done) {
        //uncomment below and update the code to test getBlockStorageInstanceList
        //instance.getBlockStorageInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getBlockStorageSnapshotInstanceList', function() {
      it('should call getBlockStorageSnapshotInstanceList successfully', function(done) {
        //uncomment below and update the code to test getBlockStorageSnapshotInstanceList
        //instance.getBlockStorageSnapshotInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getInitScriptList', function() {
      it('should call getInitScriptList successfully', function(done) {
        //uncomment below and update the code to test getInitScriptList
        //instance.getInitScriptList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getInstanceTagList', function() {
      it('should call getInstanceTagList successfully', function(done) {
        //uncomment below and update the code to test getInstanceTagList
        //instance.getInstanceTagList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getLoginKeyList', function() {
      it('should call getLoginKeyList successfully', function(done) {
        //uncomment below and update the code to test getLoginKeyList
        //instance.getLoginKeyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getMemberServerImageList', function() {
      it('should call getMemberServerImageList successfully', function(done) {
        //uncomment below and update the code to test getMemberServerImageList
        //instance.getMemberServerImageList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getNasVolumeInstanceList', function() {
      it('should call getNasVolumeInstanceList successfully', function(done) {
        //uncomment below and update the code to test getNasVolumeInstanceList
        //instance.getNasVolumeInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getNasVolumeInstanceRatingList', function() {
      it('should call getNasVolumeInstanceRatingList successfully', function(done) {
        //uncomment below and update the code to test getNasVolumeInstanceRatingList
        //instance.getNasVolumeInstanceRatingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getNetworkInterfaceList', function() {
      it('should call getNetworkInterfaceList successfully', function(done) {
        //uncomment below and update the code to test getNetworkInterfaceList
        //instance.getNetworkInterfaceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getPortForwardingRuleList', function() {
      it('should call getPortForwardingRuleList successfully', function(done) {
        //uncomment below and update the code to test getPortForwardingRuleList
        //instance.getPortForwardingRuleList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getPrivateSubnetInstanceList', function() {
      it('should call getPrivateSubnetInstanceList successfully', function(done) {
        //uncomment below and update the code to test getPrivateSubnetInstanceList
        //instance.getPrivateSubnetInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getPublicIpInstanceList', function() {
      it('should call getPublicIpInstanceList successfully', function(done) {
        //uncomment below and update the code to test getPublicIpInstanceList
        //instance.getPublicIpInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getPublicIpTargetServerInstanceList', function() {
      it('should call getPublicIpTargetServerInstanceList successfully', function(done) {
        //uncomment below and update the code to test getPublicIpTargetServerInstanceList
        //instance.getPublicIpTargetServerInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getRaidList', function() {
      it('should call getRaidList successfully', function(done) {
        //uncomment below and update the code to test getRaidList
        //instance.getRaidList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getRegionList', function() {
      it('should call getRegionList successfully', function(done) {
        //uncomment below and update the code to test getRegionList
        //instance.getRegionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getRootPassword', function() {
      it('should call getRootPassword successfully', function(done) {
        //uncomment below and update the code to test getRootPassword
        //instance.getRootPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getRootPasswordServerInstanceList', function() {
      it('should call getRootPasswordServerInstanceList successfully', function(done) {
        //uncomment below and update the code to test getRootPasswordServerInstanceList
        //instance.getRootPasswordServerInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getServerImageProductList', function() {
      it('should call getServerImageProductList successfully', function(done) {
        //uncomment below and update the code to test getServerImageProductList
        //instance.getServerImageProductList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getServerInstanceList', function() {
      it('should call getServerInstanceList successfully', function(done) {
        //uncomment below and update the code to test getServerInstanceList
        //instance.getServerInstanceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getServerProductList', function() {
      it('should call getServerProductList successfully', function(done) {
        //uncomment below and update the code to test getServerProductList
        //instance.getServerProductList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getZoneList', function() {
      it('should call getZoneList successfully', function(done) {
        //uncomment below and update the code to test getZoneList
        //instance.getZoneList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('importLoginKey', function() {
      it('should call importLoginKey successfully', function(done) {
        //uncomment below and update the code to test importLoginKey
        //instance.importLoginKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('rebootServerInstances', function() {
      it('should call rebootServerInstances successfully', function(done) {
        //uncomment below and update the code to test rebootServerInstances
        //instance.rebootServerInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('recreateServerInstance', function() {
      it('should call recreateServerInstance successfully', function(done) {
        //uncomment below and update the code to test recreateServerInstance
        //instance.recreateServerInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('removeNasVolumeAccessControl', function() {
      it('should call removeNasVolumeAccessControl successfully', function(done) {
        //uncomment below and update the code to test removeNasVolumeAccessControl
        //instance.removeNasVolumeAccessControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('replaceServerInstanceAssociatedWithPublicIp', function() {
      it('should call replaceServerInstanceAssociatedWithPublicIp successfully', function(done) {
        //uncomment below and update the code to test replaceServerInstanceAssociatedWithPublicIp
        //instance.replaceServerInstanceAssociatedWithPublicIp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('setNasVolumeAccessControl', function() {
      it('should call setNasVolumeAccessControl successfully', function(done) {
        //uncomment below and update the code to test setNasVolumeAccessControl
        //instance.setNasVolumeAccessControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('startServerInstances', function() {
      it('should call startServerInstances successfully', function(done) {
        //uncomment below and update the code to test startServerInstances
        //instance.startServerInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('stopServerInstances', function() {
      it('should call stopServerInstances successfully', function(done) {
        //uncomment below and update the code to test stopServerInstances
        //instance.stopServerInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('terminateServerInstances', function() {
      it('should call terminateServerInstances successfully', function(done) {
        //uncomment below and update the code to test terminateServerInstances
        //instance.terminateServerInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
  });

}));
