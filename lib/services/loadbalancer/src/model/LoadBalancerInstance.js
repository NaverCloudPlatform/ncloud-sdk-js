/*
* loadbalancer
* <br/>https://ncloud.apigw.ntruss.com/loadbalancer/v2
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CommonCode', 'model/LoadBalancedServerInstance', 'model/LoadBalancerRule'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CommonCode'), require('./LoadBalancedServerInstance'), require('./LoadBalancerRule'));
  } else {
    // Browser globals (root is window)
    if (!root.Loadbalancer) {
      root.Loadbalancer = {};
    }
    root.Loadbalancer.LoadBalancerInstance = factory(root.Loadbalancer.ApiClient, root.Loadbalancer.CommonCode, root.Loadbalancer.LoadBalancedServerInstance, root.Loadbalancer.LoadBalancerRule);
  }
}(this, function(ApiClient, CommonCode, LoadBalancedServerInstance, LoadBalancerRule) {
  'use strict';




  /**
   * The LoadBalancerInstance model module.
   * @module model/LoadBalancerInstance
   * @version 1.4.1
   */

  /**
   * Constructs a new <code>LoadBalancerInstance</code>.
   * @alias module:model/LoadBalancerInstance
   * @class
   */
  var exports = function() {
    var _this = this;


















  };

  /**
   * Constructs a <code>LoadBalancerInstance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LoadBalancerInstance} obj Optional instance to populate.
   * @return {module:model/LoadBalancerInstance} The populated <code>LoadBalancerInstance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('loadBalancerInstanceNo')) {
        obj['loadBalancerInstanceNo'] = ApiClient.convertToType(data['loadBalancerInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('virtualIp')) {
        obj['virtualIp'] = ApiClient.convertToType(data['virtualIp'], 'String');
      }
      if (data.hasOwnProperty('loadBalancerName')) {
        obj['loadBalancerName'] = ApiClient.convertToType(data['loadBalancerName'], 'String');
      }
      if (data.hasOwnProperty('loadBalancerAlgorithmType')) {
        obj['loadBalancerAlgorithmType'] = CommonCode.constructFromObject(data['loadBalancerAlgorithmType']);
      }
      if (data.hasOwnProperty('loadBalancerDescription')) {
        obj['loadBalancerDescription'] = ApiClient.convertToType(data['loadBalancerDescription'], 'String');
      }
      if (data.hasOwnProperty('createDate')) {
        obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
      }
      if (data.hasOwnProperty('domainName')) {
        obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
      }
      if (data.hasOwnProperty('internetLineType')) {
        obj['internetLineType'] = CommonCode.constructFromObject(data['internetLineType']);
      }
      if (data.hasOwnProperty('loadBalancerInstanceStatusName')) {
        obj['loadBalancerInstanceStatusName'] = ApiClient.convertToType(data['loadBalancerInstanceStatusName'], 'String');
      }
      if (data.hasOwnProperty('loadBalancerInstanceStatus')) {
        obj['loadBalancerInstanceStatus'] = CommonCode.constructFromObject(data['loadBalancerInstanceStatus']);
      }
      if (data.hasOwnProperty('loadBalancerInstanceOperation')) {
        obj['loadBalancerInstanceOperation'] = CommonCode.constructFromObject(data['loadBalancerInstanceOperation']);
      }
      if (data.hasOwnProperty('networkUsageType')) {
        obj['networkUsageType'] = CommonCode.constructFromObject(data['networkUsageType']);
      }
      if (data.hasOwnProperty('isHttpKeepAlive')) {
        obj['isHttpKeepAlive'] = ApiClient.convertToType(data['isHttpKeepAlive'], 'Boolean');
      }
      if (data.hasOwnProperty('connectionTimeout')) {
        obj['connectionTimeout'] = ApiClient.convertToType(data['connectionTimeout'], 'Number');
      }
      if (data.hasOwnProperty('certificateName')) {
        obj['certificateName'] = ApiClient.convertToType(data['certificateName'], 'String');
      }
      if (data.hasOwnProperty('loadBalancerRuleList')) {
        obj['loadBalancerRuleList'] = ApiClient.convertToType(data['loadBalancerRuleList'], [LoadBalancerRule]);
      }
      if (data.hasOwnProperty('loadBalancedServerInstanceList')) {
        obj['loadBalancedServerInstanceList'] = ApiClient.convertToType(data['loadBalancedServerInstanceList'], [LoadBalancedServerInstance]);
      }
    }
    return obj;
  }

  /**
   * 로드밸런서인스턴스번호
   * @member {String} loadBalancerInstanceNo
   */
  exports.prototype['loadBalancerInstanceNo'] = undefined;
  /**
   * virtualIp
   * @member {String} virtualIp
   */
  exports.prototype['virtualIp'] = undefined;
  /**
   * 로드밸런서명
   * @member {String} loadBalancerName
   */
  exports.prototype['loadBalancerName'] = undefined;
  /**
   * 로드밸런서알고리즘구분코
   * @member {module:model/CommonCode} loadBalancerAlgorithmType
   */
  exports.prototype['loadBalancerAlgorithmType'] = undefined;
  /**
   * 로드밸런서설명
   * @member {String} loadBalancerDescription
   */
  exports.prototype['loadBalancerDescription'] = undefined;
  /**
   * 생성일자
   * @member {String} createDate
   */
  exports.prototype['createDate'] = undefined;
  /**
   * 도메인명
   * @member {String} domainName
   */
  exports.prototype['domainName'] = undefined;
  /**
   * 인터넷회선구분
   * @member {module:model/CommonCode} internetLineType
   */
  exports.prototype['internetLineType'] = undefined;
  /**
   * 로드밸런서인스턴스상태명
   * @member {String} loadBalancerInstanceStatusName
   */
  exports.prototype['loadBalancerInstanceStatusName'] = undefined;
  /**
   * 로드밸런서인스턴스상태
   * @member {module:model/CommonCode} loadBalancerInstanceStatus
   */
  exports.prototype['loadBalancerInstanceStatus'] = undefined;
  /**
   * 로드밸런서인스턴스OP
   * @member {module:model/CommonCode} loadBalancerInstanceOperation
   */
  exports.prototype['loadBalancerInstanceOperation'] = undefined;
  /**
   * 네트워크사용구분
   * @member {module:model/CommonCode} networkUsageType
   */
  exports.prototype['networkUsageType'] = undefined;
  /**
   * httpKeepAlive사용여부
   * @member {Boolean} isHttpKeepAlive
   */
  exports.prototype['isHttpKeepAlive'] = undefined;
  /**
   * 커넥션타임아웃
   * @member {Number} connectionTimeout
   */
  exports.prototype['connectionTimeout'] = undefined;
  /**
   * SSL인증명
   * @member {String} certificateName
   */
  exports.prototype['certificateName'] = undefined;
  /**
   * @member {Array.<module:model/LoadBalancerRule>} loadBalancerRuleList
   */
  exports.prototype['loadBalancerRuleList'] = undefined;
  /**
   * @member {Array.<module:model/LoadBalancedServerInstance>} loadBalancedServerInstanceList
   */
  exports.prototype['loadBalancedServerInstanceList'] = undefined;



  return exports;
}));


