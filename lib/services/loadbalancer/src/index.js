/*
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessControlGroup', 'model/AddLoadBalancerSslCertificateRequest', 'model/AddLoadBalancerSslCertificateResponse', 'model/ChangeLoadBalancedServerInstancesRequest', 'model/ChangeLoadBalancedServerInstancesResponse', 'model/ChangeLoadBalancerInstanceConfigurationRequest', 'model/ChangeLoadBalancerInstanceConfigurationResponse', 'model/CommonCode', 'model/CreateLoadBalancerInstanceRequest', 'model/CreateLoadBalancerInstanceResponse', 'model/DeleteLoadBalancerInstancesRequest', 'model/DeleteLoadBalancerInstancesResponse', 'model/DeleteLoadBalancerSslCertificateRequest', 'model/DeleteLoadBalancerSslCertificateResponse', 'model/GetLoadBalancedServerInstanceListRequest', 'model/GetLoadBalancedServerInstanceListResponse', 'model/GetLoadBalancerInstanceListRequest', 'model/GetLoadBalancerInstanceListResponse', 'model/GetLoadBalancerSslCertificateListRequest', 'model/GetLoadBalancerSslCertificateListResponse', 'model/GetLoadBalancerTargetServerInstanceListRequest', 'model/GetLoadBalancerTargetServerInstanceListResponse', 'model/LoadBalancedServerInstance', 'model/LoadBalancerInstance', 'model/LoadBalancerRule', 'model/LoadBalancerRuleParameter', 'model/Region', 'model/ServerHealthCheckStatus', 'model/ServerInstance', 'model/SslCertificate', 'model/Zone', 'api/V2Api'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessControlGroup'), require('./model/AddLoadBalancerSslCertificateRequest'), require('./model/AddLoadBalancerSslCertificateResponse'), require('./model/ChangeLoadBalancedServerInstancesRequest'), require('./model/ChangeLoadBalancedServerInstancesResponse'), require('./model/ChangeLoadBalancerInstanceConfigurationRequest'), require('./model/ChangeLoadBalancerInstanceConfigurationResponse'), require('./model/CommonCode'), require('./model/CreateLoadBalancerInstanceRequest'), require('./model/CreateLoadBalancerInstanceResponse'), require('./model/DeleteLoadBalancerInstancesRequest'), require('./model/DeleteLoadBalancerInstancesResponse'), require('./model/DeleteLoadBalancerSslCertificateRequest'), require('./model/DeleteLoadBalancerSslCertificateResponse'), require('./model/GetLoadBalancedServerInstanceListRequest'), require('./model/GetLoadBalancedServerInstanceListResponse'), require('./model/GetLoadBalancerInstanceListRequest'), require('./model/GetLoadBalancerInstanceListResponse'), require('./model/GetLoadBalancerSslCertificateListRequest'), require('./model/GetLoadBalancerSslCertificateListResponse'), require('./model/GetLoadBalancerTargetServerInstanceListRequest'), require('./model/GetLoadBalancerTargetServerInstanceListResponse'), require('./model/LoadBalancedServerInstance'), require('./model/LoadBalancerInstance'), require('./model/LoadBalancerRule'), require('./model/LoadBalancerRuleParameter'), require('./model/Region'), require('./model/ServerHealthCheckStatus'), require('./model/ServerInstance'), require('./model/SslCertificate'), require('./model/Zone'), require('./api/V2Api'));
  }
}(function(ApiClient, AccessControlGroup, AddLoadBalancerSslCertificateRequest, AddLoadBalancerSslCertificateResponse, ChangeLoadBalancedServerInstancesRequest, ChangeLoadBalancedServerInstancesResponse, ChangeLoadBalancerInstanceConfigurationRequest, ChangeLoadBalancerInstanceConfigurationResponse, CommonCode, CreateLoadBalancerInstanceRequest, CreateLoadBalancerInstanceResponse, DeleteLoadBalancerInstancesRequest, DeleteLoadBalancerInstancesResponse, DeleteLoadBalancerSslCertificateRequest, DeleteLoadBalancerSslCertificateResponse, GetLoadBalancedServerInstanceListRequest, GetLoadBalancedServerInstanceListResponse, GetLoadBalancerInstanceListRequest, GetLoadBalancerInstanceListResponse, GetLoadBalancerSslCertificateListRequest, GetLoadBalancerSslCertificateListResponse, GetLoadBalancerTargetServerInstanceListRequest, GetLoadBalancerTargetServerInstanceListResponse, LoadBalancedServerInstance, LoadBalancerInstance, LoadBalancerRule, LoadBalancerRuleParameter, Region, ServerHealthCheckStatus, ServerInstance, SslCertificate, Zone, V2Api) {
  'use strict';

  /**
   * &lt;br/&gt;https://ncloud.apigw.ntruss.com/loadbalancer/v2.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Loadbalancer = require('index'); // See note below*.
   * var xxxSvc = new Loadbalancer.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Loadbalancer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Loadbalancer.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Loadbalancer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.4.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessControlGroup model constructor.
     * @property {module:model/AccessControlGroup}
     */
    AccessControlGroup: AccessControlGroup,
    /**
     * The AddLoadBalancerSslCertificateRequest model constructor.
     * @property {module:model/AddLoadBalancerSslCertificateRequest}
     */
    AddLoadBalancerSslCertificateRequest: AddLoadBalancerSslCertificateRequest,
    /**
     * The AddLoadBalancerSslCertificateResponse model constructor.
     * @property {module:model/AddLoadBalancerSslCertificateResponse}
     */
    AddLoadBalancerSslCertificateResponse: AddLoadBalancerSslCertificateResponse,
    /**
     * The ChangeLoadBalancedServerInstancesRequest model constructor.
     * @property {module:model/ChangeLoadBalancedServerInstancesRequest}
     */
    ChangeLoadBalancedServerInstancesRequest: ChangeLoadBalancedServerInstancesRequest,
    /**
     * The ChangeLoadBalancedServerInstancesResponse model constructor.
     * @property {module:model/ChangeLoadBalancedServerInstancesResponse}
     */
    ChangeLoadBalancedServerInstancesResponse: ChangeLoadBalancedServerInstancesResponse,
    /**
     * The ChangeLoadBalancerInstanceConfigurationRequest model constructor.
     * @property {module:model/ChangeLoadBalancerInstanceConfigurationRequest}
     */
    ChangeLoadBalancerInstanceConfigurationRequest: ChangeLoadBalancerInstanceConfigurationRequest,
    /**
     * The ChangeLoadBalancerInstanceConfigurationResponse model constructor.
     * @property {module:model/ChangeLoadBalancerInstanceConfigurationResponse}
     */
    ChangeLoadBalancerInstanceConfigurationResponse: ChangeLoadBalancerInstanceConfigurationResponse,
    /**
     * The CommonCode model constructor.
     * @property {module:model/CommonCode}
     */
    CommonCode: CommonCode,
    /**
     * The CreateLoadBalancerInstanceRequest model constructor.
     * @property {module:model/CreateLoadBalancerInstanceRequest}
     */
    CreateLoadBalancerInstanceRequest: CreateLoadBalancerInstanceRequest,
    /**
     * The CreateLoadBalancerInstanceResponse model constructor.
     * @property {module:model/CreateLoadBalancerInstanceResponse}
     */
    CreateLoadBalancerInstanceResponse: CreateLoadBalancerInstanceResponse,
    /**
     * The DeleteLoadBalancerInstancesRequest model constructor.
     * @property {module:model/DeleteLoadBalancerInstancesRequest}
     */
    DeleteLoadBalancerInstancesRequest: DeleteLoadBalancerInstancesRequest,
    /**
     * The DeleteLoadBalancerInstancesResponse model constructor.
     * @property {module:model/DeleteLoadBalancerInstancesResponse}
     */
    DeleteLoadBalancerInstancesResponse: DeleteLoadBalancerInstancesResponse,
    /**
     * The DeleteLoadBalancerSslCertificateRequest model constructor.
     * @property {module:model/DeleteLoadBalancerSslCertificateRequest}
     */
    DeleteLoadBalancerSslCertificateRequest: DeleteLoadBalancerSslCertificateRequest,
    /**
     * The DeleteLoadBalancerSslCertificateResponse model constructor.
     * @property {module:model/DeleteLoadBalancerSslCertificateResponse}
     */
    DeleteLoadBalancerSslCertificateResponse: DeleteLoadBalancerSslCertificateResponse,
    /**
     * The GetLoadBalancedServerInstanceListRequest model constructor.
     * @property {module:model/GetLoadBalancedServerInstanceListRequest}
     */
    GetLoadBalancedServerInstanceListRequest: GetLoadBalancedServerInstanceListRequest,
    /**
     * The GetLoadBalancedServerInstanceListResponse model constructor.
     * @property {module:model/GetLoadBalancedServerInstanceListResponse}
     */
    GetLoadBalancedServerInstanceListResponse: GetLoadBalancedServerInstanceListResponse,
    /**
     * The GetLoadBalancerInstanceListRequest model constructor.
     * @property {module:model/GetLoadBalancerInstanceListRequest}
     */
    GetLoadBalancerInstanceListRequest: GetLoadBalancerInstanceListRequest,
    /**
     * The GetLoadBalancerInstanceListResponse model constructor.
     * @property {module:model/GetLoadBalancerInstanceListResponse}
     */
    GetLoadBalancerInstanceListResponse: GetLoadBalancerInstanceListResponse,
    /**
     * The GetLoadBalancerSslCertificateListRequest model constructor.
     * @property {module:model/GetLoadBalancerSslCertificateListRequest}
     */
    GetLoadBalancerSslCertificateListRequest: GetLoadBalancerSslCertificateListRequest,
    /**
     * The GetLoadBalancerSslCertificateListResponse model constructor.
     * @property {module:model/GetLoadBalancerSslCertificateListResponse}
     */
    GetLoadBalancerSslCertificateListResponse: GetLoadBalancerSslCertificateListResponse,
    /**
     * The GetLoadBalancerTargetServerInstanceListRequest model constructor.
     * @property {module:model/GetLoadBalancerTargetServerInstanceListRequest}
     */
    GetLoadBalancerTargetServerInstanceListRequest: GetLoadBalancerTargetServerInstanceListRequest,
    /**
     * The GetLoadBalancerTargetServerInstanceListResponse model constructor.
     * @property {module:model/GetLoadBalancerTargetServerInstanceListResponse}
     */
    GetLoadBalancerTargetServerInstanceListResponse: GetLoadBalancerTargetServerInstanceListResponse,
    /**
     * The LoadBalancedServerInstance model constructor.
     * @property {module:model/LoadBalancedServerInstance}
     */
    LoadBalancedServerInstance: LoadBalancedServerInstance,
    /**
     * The LoadBalancerInstance model constructor.
     * @property {module:model/LoadBalancerInstance}
     */
    LoadBalancerInstance: LoadBalancerInstance,
    /**
     * The LoadBalancerRule model constructor.
     * @property {module:model/LoadBalancerRule}
     */
    LoadBalancerRule: LoadBalancerRule,
    /**
     * The LoadBalancerRuleParameter model constructor.
     * @property {module:model/LoadBalancerRuleParameter}
     */
    LoadBalancerRuleParameter: LoadBalancerRuleParameter,
    /**
     * The Region model constructor.
     * @property {module:model/Region}
     */
    Region: Region,
    /**
     * The ServerHealthCheckStatus model constructor.
     * @property {module:model/ServerHealthCheckStatus}
     */
    ServerHealthCheckStatus: ServerHealthCheckStatus,
    /**
     * The ServerInstance model constructor.
     * @property {module:model/ServerInstance}
     */
    ServerInstance: ServerInstance,
    /**
     * The SslCertificate model constructor.
     * @property {module:model/SslCertificate}
     */
    SslCertificate: SslCertificate,
    /**
     * The Zone model constructor.
     * @property {module:model/Zone}
     */
    Zone: Zone,
    /**
     * The V2Api service constructor.
     * @property {module:api/V2Api}
     */
    V2Api: V2Api
  };

  return exports;
}));
