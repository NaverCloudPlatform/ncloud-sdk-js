/*
* vserver
* VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworkInterfaceParameter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworkInterfaceParameter'));
  } else {
    // Browser globals (root is window)
    if (!root.Vserver) {
      root.Vserver = {};
    }
    root.Vserver.CreateServerInstancesRequest = factory(root.Vserver.ApiClient, root.Vserver.NetworkInterfaceParameter);
  }
}(this, function(ApiClient, NetworkInterfaceParameter) {
  'use strict';




  /**
   * The CreateServerInstancesRequest model module.
   * @module model/CreateServerInstancesRequest
   * @version 1.0.1
   */

  /**
   * Constructs a new <code>CreateServerInstancesRequest</code>.
   * @alias module:model/CreateServerInstancesRequest
   * @class
   * @param vpcNo {String} VPC번호
   * @param subnetNo {String} 서브넷번호
   * @param networkInterfaceList {Array.<module:model/NetworkInterfaceParameter>} 네트워크인터페이스리스트
   */
  var exports = function(vpcNo, subnetNo, networkInterfaceList) {
    var _this = this;













    _this['vpcNo'] = vpcNo;
    _this['subnetNo'] = subnetNo;
    _this['networkInterfaceList'] = networkInterfaceList;


  };

  /**
   * Constructs a <code>CreateServerInstancesRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateServerInstancesRequest} obj Optional instance to populate.
   * @return {module:model/CreateServerInstancesRequest} The populated <code>CreateServerInstancesRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('regionCode')) {
        obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
      }
      if (data.hasOwnProperty('serverProductCode')) {
        obj['serverProductCode'] = ApiClient.convertToType(data['serverProductCode'], 'String');
      }
      if (data.hasOwnProperty('serverImageProductCode')) {
        obj['serverImageProductCode'] = ApiClient.convertToType(data['serverImageProductCode'], 'String');
      }
      if (data.hasOwnProperty('memberServerImageInstanceNo')) {
        obj['memberServerImageInstanceNo'] = ApiClient.convertToType(data['memberServerImageInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('serverName')) {
        obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
      }
      if (data.hasOwnProperty('serverDescription')) {
        obj['serverDescription'] = ApiClient.convertToType(data['serverDescription'], 'String');
      }
      if (data.hasOwnProperty('loginKeyName')) {
        obj['loginKeyName'] = ApiClient.convertToType(data['loginKeyName'], 'String');
      }
      if (data.hasOwnProperty('isProtectServerTermination')) {
        obj['isProtectServerTermination'] = ApiClient.convertToType(data['isProtectServerTermination'], 'Boolean');
      }
      if (data.hasOwnProperty('serverCreateCount')) {
        obj['serverCreateCount'] = ApiClient.convertToType(data['serverCreateCount'], 'Number');
      }
      if (data.hasOwnProperty('serverCreateStartNo')) {
        obj['serverCreateStartNo'] = ApiClient.convertToType(data['serverCreateStartNo'], 'Number');
      }
      if (data.hasOwnProperty('feeSystemTypeCode')) {
        obj['feeSystemTypeCode'] = ApiClient.convertToType(data['feeSystemTypeCode'], 'String');
      }
      if (data.hasOwnProperty('initScriptNo')) {
        obj['initScriptNo'] = ApiClient.convertToType(data['initScriptNo'], 'String');
      }
      if (data.hasOwnProperty('vpcNo')) {
        obj['vpcNo'] = ApiClient.convertToType(data['vpcNo'], 'String');
      }
      if (data.hasOwnProperty('subnetNo')) {
        obj['subnetNo'] = ApiClient.convertToType(data['subnetNo'], 'String');
      }
      if (data.hasOwnProperty('networkInterfaceList')) {
        obj['networkInterfaceList'] = ApiClient.convertToType(data['networkInterfaceList'], [NetworkInterfaceParameter]);
      }
      if (data.hasOwnProperty('placementGroupNo')) {
        obj['placementGroupNo'] = ApiClient.convertToType(data['placementGroupNo'], 'String');
      }
      if (data.hasOwnProperty('isEncryptedBaseBlockStorageVolume')) {
        obj['isEncryptedBaseBlockStorageVolume'] = ApiClient.convertToType(data['isEncryptedBaseBlockStorageVolume'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * REGION코드
   * @member {String} regionCode
   */
  exports.prototype['regionCode'] = undefined;
  /**
   * 서버상품코드
   * @member {String} serverProductCode
   */
  exports.prototype['serverProductCode'] = undefined;
  /**
   * 서버이미지상품코드
   * @member {String} serverImageProductCode
   */
  exports.prototype['serverImageProductCode'] = undefined;
  /**
   * 회원서버이미지인스턴스번호
   * @member {String} memberServerImageInstanceNo
   */
  exports.prototype['memberServerImageInstanceNo'] = undefined;
  /**
   * 서버이름
   * @member {String} serverName
   */
  exports.prototype['serverName'] = undefined;
  /**
   * 서버설명
   * @member {String} serverDescription
   */
  exports.prototype['serverDescription'] = undefined;
  /**
   * 로그인키이름
   * @member {String} loginKeyName
   */
  exports.prototype['loginKeyName'] = undefined;
  /**
   * 반납보호여부
   * @member {Boolean} isProtectServerTermination
   */
  exports.prototype['isProtectServerTermination'] = undefined;
  /**
   * 서버생성개수
   * @member {Number} serverCreateCount
   */
  exports.prototype['serverCreateCount'] = undefined;
  /**
   * 서버생성시작번호
   * @member {Number} serverCreateStartNo
   */
  exports.prototype['serverCreateStartNo'] = undefined;
  /**
   * 요금제유형코드
   * @member {String} feeSystemTypeCode
   */
  exports.prototype['feeSystemTypeCode'] = undefined;
  /**
   * 초기화스크립트번호
   * @member {String} initScriptNo
   */
  exports.prototype['initScriptNo'] = undefined;
  /**
   * VPC번호
   * @member {String} vpcNo
   */
  exports.prototype['vpcNo'] = undefined;
  /**
   * 서브넷번호
   * @member {String} subnetNo
   */
  exports.prototype['subnetNo'] = undefined;
  /**
   * 네트워크인터페이스리스트
   * @member {Array.<module:model/NetworkInterfaceParameter>} networkInterfaceList
   */
  exports.prototype['networkInterfaceList'] = undefined;
  /**
   * 물리배치그룹번호
   * @member {String} placementGroupNo
   */
  exports.prototype['placementGroupNo'] = undefined;
  /**
   * 기본블록스토리지볼륨암호화여부
   * @member {Boolean} isEncryptedBaseBlockStorageVolume
   */
  exports.prototype['isEncryptedBaseBlockStorageVolume'] = undefined;



  return exports;
}));


