/*
* server
* <br/>https://ncloud.apigw.ntruss.com/server/v2
*
* OpenAPI spec version: 2018-06-22T02:34:44Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'com.ncloud.server.model/CommonCode', 'com.ncloud.server.model/NasVolumeInstanceCustomIp', 'com.ncloud.server.model/Region', 'com.ncloud.server.model/ServerInstance', 'com.ncloud.server.model/Zone'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CommonCode'), require('./NasVolumeInstanceCustomIp'), require('./Region'), require('./ServerInstance'), require('./Zone'));
  } else {
    // Browser globals (root is window)
    if (!root.Server) {
      root.Server = {};
    }
    root.Server.NasVolumeInstance = factory(root.Server.ApiClient, root.Server.CommonCode, root.Server.NasVolumeInstanceCustomIp, root.Server.Region, root.Server.ServerInstance, root.Server.Zone);
  }
}(this, function(ApiClient, CommonCode, NasVolumeInstanceCustomIp, Region, ServerInstance, Zone) {
  'use strict';




  /**
   * The NasVolumeInstance model module.
   * @module com.ncloud.server.model/NasVolumeInstance
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>NasVolumeInstance</code>.
   * @alias module:com.ncloud.server.model/NasVolumeInstance
   * @class
   */
  var exports = function() {
    var _this = this;


























  };

  /**
   * Constructs a <code>NasVolumeInstance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.ncloud.server.model/NasVolumeInstance} obj Optional instance to populate.
   * @return {module:com.ncloud.server.model/NasVolumeInstance} The populated <code>NasVolumeInstance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('nasVolumeInstanceNo')) {
        obj['nasVolumeInstanceNo'] = ApiClient.convertToType(data['nasVolumeInstanceNo'], 'String');
      }
      if (data.hasOwnProperty('nasVolumeInstanceStatus')) {
        obj['nasVolumeInstanceStatus'] = CommonCode.constructFromObject(data['nasVolumeInstanceStatus']);
      }
      if (data.hasOwnProperty('nasVolumeInstanceOperation')) {
        obj['nasVolumeInstanceOperation'] = CommonCode.constructFromObject(data['nasVolumeInstanceOperation']);
      }
      if (data.hasOwnProperty('nasVolumeInstanceStatusName')) {
        obj['nasVolumeInstanceStatusName'] = ApiClient.convertToType(data['nasVolumeInstanceStatusName'], 'String');
      }
      if (data.hasOwnProperty('createDate')) {
        obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
      }
      if (data.hasOwnProperty('nasVolumeInstanceDescription')) {
        obj['nasVolumeInstanceDescription'] = ApiClient.convertToType(data['nasVolumeInstanceDescription'], 'String');
      }
      if (data.hasOwnProperty('mountInformation')) {
        obj['mountInformation'] = ApiClient.convertToType(data['mountInformation'], 'String');
      }
      if (data.hasOwnProperty('volumeAllotmentProtocolType')) {
        obj['volumeAllotmentProtocolType'] = CommonCode.constructFromObject(data['volumeAllotmentProtocolType']);
      }
      if (data.hasOwnProperty('volumeName')) {
        obj['volumeName'] = ApiClient.convertToType(data['volumeName'], 'String');
      }
      if (data.hasOwnProperty('volumeTotalSize')) {
        obj['volumeTotalSize'] = ApiClient.convertToType(data['volumeTotalSize'], 'Number');
      }
      if (data.hasOwnProperty('volumeSize')) {
        obj['volumeSize'] = ApiClient.convertToType(data['volumeSize'], 'Number');
      }
      if (data.hasOwnProperty('volumeUseSize')) {
        obj['volumeUseSize'] = ApiClient.convertToType(data['volumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('volumeUseRatio')) {
        obj['volumeUseRatio'] = ApiClient.convertToType(data['volumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeConfigurationRatio')) {
        obj['snapshotVolumeConfigurationRatio'] = ApiClient.convertToType(data['snapshotVolumeConfigurationRatio'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeConfigPeriodType')) {
        obj['snapshotVolumeConfigPeriodType'] = CommonCode.constructFromObject(data['snapshotVolumeConfigPeriodType']);
      }
      if (data.hasOwnProperty('snapshotVolumeConfigTime')) {
        obj['snapshotVolumeConfigTime'] = ApiClient.convertToType(data['snapshotVolumeConfigTime'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeSize')) {
        obj['snapshotVolumeSize'] = ApiClient.convertToType(data['snapshotVolumeSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeUseSize')) {
        obj['snapshotVolumeUseSize'] = ApiClient.convertToType(data['snapshotVolumeUseSize'], 'Number');
      }
      if (data.hasOwnProperty('snapshotVolumeUseRatio')) {
        obj['snapshotVolumeUseRatio'] = ApiClient.convertToType(data['snapshotVolumeUseRatio'], 'Number');
      }
      if (data.hasOwnProperty('isSnapshotConfiguration')) {
        obj['isSnapshotConfiguration'] = ApiClient.convertToType(data['isSnapshotConfiguration'], 'Boolean');
      }
      if (data.hasOwnProperty('isEventConfiguration')) {
        obj['isEventConfiguration'] = ApiClient.convertToType(data['isEventConfiguration'], 'Boolean');
      }
      if (data.hasOwnProperty('region')) {
        obj['region'] = Region.constructFromObject(data['region']);
      }
      if (data.hasOwnProperty('zone')) {
        obj['zone'] = Zone.constructFromObject(data['zone']);
      }
      if (data.hasOwnProperty('nasVolumeInstanceCustomIpList')) {
        obj['nasVolumeInstanceCustomIpList'] = ApiClient.convertToType(data['nasVolumeInstanceCustomIpList'], [NasVolumeInstanceCustomIp]);
      }
      if (data.hasOwnProperty('nasVolumeServerInstanceList')) {
        obj['nasVolumeServerInstanceList'] = ApiClient.convertToType(data['nasVolumeServerInstanceList'], [ServerInstance]);
      }
    }
    return obj;
  }

  /**
   * NAS볼륨인스턴스번호
   * @member {String} nasVolumeInstanceNo
   */
  exports.prototype['nasVolumeInstanceNo'] = undefined;
  /**
   * NAS볼륨인스턴스상태
   * @member {module:com.ncloud.server.model/CommonCode} nasVolumeInstanceStatus
   */
  exports.prototype['nasVolumeInstanceStatus'] = undefined;
  /**
   * NAS볼륨인스턴스OP
   * @member {module:com.ncloud.server.model/CommonCode} nasVolumeInstanceOperation
   */
  exports.prototype['nasVolumeInstanceOperation'] = undefined;
  /**
   * 볼륨인스턴스상태명
   * @member {String} nasVolumeInstanceStatusName
   */
  exports.prototype['nasVolumeInstanceStatusName'] = undefined;
  /**
   * 생성일시
   * @member {String} createDate
   */
  exports.prototype['createDate'] = undefined;
  /**
   * NAS볼륨인스턴스설명
   * @member {String} nasVolumeInstanceDescription
   */
  exports.prototype['nasVolumeInstanceDescription'] = undefined;
  /**
   * 마운트정보
   * @member {String} mountInformation
   */
  exports.prototype['mountInformation'] = undefined;
  /**
   * 볼륨할당프로토콜구분
   * @member {module:com.ncloud.server.model/CommonCode} volumeAllotmentProtocolType
   */
  exports.prototype['volumeAllotmentProtocolType'] = undefined;
  /**
   * 볼륨명
   * @member {String} volumeName
   */
  exports.prototype['volumeName'] = undefined;
  /**
   * 볼륨총사이즈
   * @member {Number} volumeTotalSize
   */
  exports.prototype['volumeTotalSize'] = undefined;
  /**
   * 볼륨사이즈
   * @member {Number} volumeSize
   */
  exports.prototype['volumeSize'] = undefined;
  /**
   * 볼륨사용사이즈
   * @member {Number} volumeUseSize
   */
  exports.prototype['volumeUseSize'] = undefined;
  /**
   * 볼륨사용비율
   * @member {Number} volumeUseRatio
   */
  exports.prototype['volumeUseRatio'] = undefined;
  /**
   * 스냅샷볼륨설정비율
   * @member {Number} snapshotVolumeConfigurationRatio
   */
  exports.prototype['snapshotVolumeConfigurationRatio'] = undefined;
  /**
   * 스냅샷볼륨설정기간구분
   * @member {module:com.ncloud.server.model/CommonCode} snapshotVolumeConfigPeriodType
   */
  exports.prototype['snapshotVolumeConfigPeriodType'] = undefined;
  /**
   * 스냅샷볼륨설정시간
   * @member {Number} snapshotVolumeConfigTime
   */
  exports.prototype['snapshotVolumeConfigTime'] = undefined;
  /**
   * 스냅샷사이즈
   * @member {Number} snapshotVolumeSize
   */
  exports.prototype['snapshotVolumeSize'] = undefined;
  /**
   * 스냅사용사이즈
   * @member {Number} snapshotVolumeUseSize
   */
  exports.prototype['snapshotVolumeUseSize'] = undefined;
  /**
   * 스냅샷사용비율
   * @member {Number} snapshotVolumeUseRatio
   */
  exports.prototype['snapshotVolumeUseRatio'] = undefined;
  /**
   * 스냅샷설정여부
   * @member {Boolean} isSnapshotConfiguration
   */
  exports.prototype['isSnapshotConfiguration'] = undefined;
  /**
   * 이벤트설정여부
   * @member {Boolean} isEventConfiguration
   */
  exports.prototype['isEventConfiguration'] = undefined;
  /**
   * 리전
   * @member {module:com.ncloud.server.model/Region} region
   */
  exports.prototype['region'] = undefined;
  /**
   * ZONE
   * @member {module:com.ncloud.server.model/Zone} zone
   */
  exports.prototype['zone'] = undefined;
  /**
   * NAS볼륨커스텀IP리스트
   * @member {Array.<module:com.ncloud.server.model/NasVolumeInstanceCustomIp>} nasVolumeInstanceCustomIpList
   */
  exports.prototype['nasVolumeInstanceCustomIpList'] = undefined;
  /**
   * NAS볼륨서버인스턴스리스트
   * @member {Array.<module:com.ncloud.server.model/ServerInstance>} nasVolumeServerInstanceList
   */
  exports.prototype['nasVolumeServerInstanceList'] = undefined;



  return exports;
}));


