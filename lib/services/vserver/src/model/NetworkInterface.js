/*
* vserver
* VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
*
* OpenAPI spec version: 2020-09-17T02:28:03Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CommonCode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CommonCode'));
  } else {
    // Browser globals (root is window)
    if (!root.Vserver) {
      root.Vserver = {};
    }
    root.Vserver.NetworkInterface = factory(root.Vserver.ApiClient, root.Vserver.CommonCode);
  }
}(this, function(ApiClient, CommonCode) {
  'use strict';




  /**
   * The NetworkInterface model module.
   * @module model/NetworkInterface
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>NetworkInterface</code>.
   * @alias module:model/NetworkInterface
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>NetworkInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NetworkInterface} obj Optional instance to populate.
   * @return {module:model/NetworkInterface} The populated <code>NetworkInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('networkInterfaceNo')) {
        obj['networkInterfaceNo'] = ApiClient.convertToType(data['networkInterfaceNo'], 'String');
      }
      if (data.hasOwnProperty('networkInterfaceName')) {
        obj['networkInterfaceName'] = ApiClient.convertToType(data['networkInterfaceName'], 'String');
      }
      if (data.hasOwnProperty('subnetNo')) {
        obj['subnetNo'] = ApiClient.convertToType(data['subnetNo'], 'String');
      }
      if (data.hasOwnProperty('deleteOnTermination')) {
        obj['deleteOnTermination'] = ApiClient.convertToType(data['deleteOnTermination'], 'Boolean');
      }
      if (data.hasOwnProperty('isDefault')) {
        obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
      }
      if (data.hasOwnProperty('deviceName')) {
        obj['deviceName'] = ApiClient.convertToType(data['deviceName'], 'String');
      }
      if (data.hasOwnProperty('networkInterfaceStatus')) {
        obj['networkInterfaceStatus'] = CommonCode.constructFromObject(data['networkInterfaceStatus']);
      }
      if (data.hasOwnProperty('instanceType')) {
        obj['instanceType'] = CommonCode.constructFromObject(data['instanceType']);
      }
      if (data.hasOwnProperty('instanceNo')) {
        obj['instanceNo'] = ApiClient.convertToType(data['instanceNo'], 'String');
      }
      if (data.hasOwnProperty('ip')) {
        obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
      }
      if (data.hasOwnProperty('accessControlGroupNoList')) {
        obj['accessControlGroupNoList'] = ApiClient.convertToType(data['accessControlGroupNoList'], ['String']);
      }
      if (data.hasOwnProperty('networkInterfaceDescription')) {
        obj['networkInterfaceDescription'] = ApiClient.convertToType(data['networkInterfaceDescription'], 'String');
      }
    }
    return obj;
  }

  /**
   * 네트워크인터페이스번호
   * @member {String} networkInterfaceNo
   */
  exports.prototype['networkInterfaceNo'] = undefined;
  /**
   * 네트워크인터페이스이름
   * @member {String} networkInterfaceName
   */
  exports.prototype['networkInterfaceName'] = undefined;
  /**
   * 서브넷번호
   * @member {String} subnetNo
   */
  exports.prototype['subnetNo'] = undefined;
  /**
   * 디바이스반납시자동반납여부
   * @member {Boolean} deleteOnTermination
   */
  exports.prototype['deleteOnTermination'] = undefined;
  /**
   * Default여부
   * @member {Boolean} isDefault
   */
  exports.prototype['isDefault'] = undefined;
  /**
   * 디바이스이름
   * @member {String} deviceName
   */
  exports.prototype['deviceName'] = undefined;
  /**
   * 네트워크인터페이스상태
   * @member {module:model/CommonCode} networkInterfaceStatus
   */
  exports.prototype['networkInterfaceStatus'] = undefined;
  /**
   * 인스턴스유형
   * @member {module:model/CommonCode} instanceType
   */
  exports.prototype['instanceType'] = undefined;
  /**
   * 인스턴스번호
   * @member {String} instanceNo
   */
  exports.prototype['instanceNo'] = undefined;
  /**
   * IP주소
   * @member {String} ip
   */
  exports.prototype['ip'] = undefined;
  /**
   * ACG번호리스트
   * @member {Array.<String>} accessControlGroupNoList
   */
  exports.prototype['accessControlGroupNoList'] = undefined;
  /**
   * 네트워크인터페이스설명
   * @member {String} networkInterfaceDescription
   */
  exports.prototype['networkInterfaceDescription'] = undefined;



  return exports;
}));


