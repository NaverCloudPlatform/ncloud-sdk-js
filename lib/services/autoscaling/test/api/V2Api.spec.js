/*
* autoscaling
* <br/>https://ncloud.beta-apigw.ntruss.com/autoscaling/v2
*
* OpenAPI spec version: 2018-06-20T07:13:45Z
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    factory(require('expect.js'), require('../../src/index'));
  } else {
    factory(root.expect, root.Autoscaling);
  }
}(this, function(expect, Autoscaling) {
  'use strict';

  var client = new Autoscaling.ApiClient({
    apiKey: 'your api key',
    accessKey: 'your access key',
    secretKey: 'your secret key',
  });
  var instance = new Autoscaling.V2Api(client);

  describe('V2Api', function() {
    describe('createAutoScalingGroup', function() {
      it('should call createAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test createAutoScalingGroup
        //instance.createAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('createLaunchConfiguration', function() {
      it('should call createLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test createLaunchConfiguration
        //instance.createLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteAutoScalingGroup', function() {
      it('should call deleteAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test deleteAutoScalingGroup
        //instance.deleteAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteAutoScalingLaunchConfiguration', function() {
      it('should call deleteAutoScalingLaunchConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteAutoScalingLaunchConfiguration
        //instance.deleteAutoScalingLaunchConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deletePolicy', function() {
      it('should call deletePolicy successfully', function(done) {
        //uncomment below and update the code to test deletePolicy
        //instance.deletePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('deleteScheduledAction', function() {
      it('should call deleteScheduledAction successfully', function(done) {
        //uncomment below and update the code to test deleteScheduledAction
        //instance.deleteScheduledAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('executePolicy', function() {
      it('should call executePolicy successfully', function(done) {
        //uncomment below and update the code to test executePolicy
        //instance.executePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAdjustmentTypeList', function() {
      it('should call getAdjustmentTypeList successfully', function(done) {
        //uncomment below and update the code to test getAdjustmentTypeList
        //instance.getAdjustmentTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAutoScalingActivityLogList', function() {
      it('should call getAutoScalingActivityLogList successfully', function(done) {
        //uncomment below and update the code to test getAutoScalingActivityLogList
        //instance.getAutoScalingActivityLogList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAutoScalingConfigurationLogList', function() {
      it('should call getAutoScalingConfigurationLogList successfully', function(done) {
        //uncomment below and update the code to test getAutoScalingConfigurationLogList
        //instance.getAutoScalingConfigurationLogList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAutoScalingGroupList', function() {
      it('should call getAutoScalingGroupList successfully', function(done) {
        //uncomment below and update the code to test getAutoScalingGroupList
        //instance.getAutoScalingGroupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getAutoScalingPolicyList', function() {
      it('should call getAutoScalingPolicyList successfully', function(done) {
        //uncomment below and update the code to test getAutoScalingPolicyList
        //instance.getAutoScalingPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getLaunchConfigurationList', function() {
      it('should call getLaunchConfigurationList successfully', function(done) {
        //uncomment below and update the code to test getLaunchConfigurationList
        //instance.getLaunchConfigurationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getScalingProcessTypeList', function() {
      it('should call getScalingProcessTypeList successfully', function(done) {
        //uncomment below and update the code to test getScalingProcessTypeList
        //instance.getScalingProcessTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('getScheduledActionList', function() {
      it('should call getScheduledActionList successfully', function(done) {
        //uncomment below and update the code to test getScheduledActionList
        //instance.getScheduledActionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('putScalingPolicy', function() {
      it('should call putScalingPolicy successfully', function(done) {
        //uncomment below and update the code to test putScalingPolicy
        //instance.putScalingPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('putScheduledUpdateGroupAction', function() {
      it('should call putScheduledUpdateGroupAction successfully', function(done) {
        //uncomment below and update the code to test putScheduledUpdateGroupAction
        //instance.putScheduledUpdateGroupAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('resumeProcesses', function() {
      it('should call resumeProcesses successfully', function(done) {
        //uncomment below and update the code to test resumeProcesses
        //instance.resumeProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('setDesiredCapacity', function() {
      it('should call setDesiredCapacity successfully', function(done) {
        //uncomment below and update the code to test setDesiredCapacity
        //instance.setDesiredCapacity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('setServerInstanceHealth', function() {
      it('should call setServerInstanceHealth successfully', function(done) {
        //uncomment below and update the code to test setServerInstanceHealth
        //instance.setServerInstanceHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('suspendProcesses', function() {
      it('should call suspendProcesses successfully', function(done) {
        //uncomment below and update the code to test suspendProcesses
        //instance.suspendProcesses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('terminateServerInstanceInAutoScalingGroup', function() {
      it('should call terminateServerInstanceInAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test terminateServerInstanceInAutoScalingGroup
        //instance.terminateServerInstanceInAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
    describe('updateAutoScalingGroup', function() {
      it('should call updateAutoScalingGroup successfully', function(done) {
        //uncomment below and update the code to test updateAutoScalingGroup
        //instance.updateAutoScalingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //done();
        //});
        done();
      });
    });
  });

}));
