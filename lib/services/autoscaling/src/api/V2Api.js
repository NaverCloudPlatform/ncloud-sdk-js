/*
* autoscaling
* <br/>https://ncloud.apigw.ntruss.com/autoscaling/v2
*
* NBP corp.
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateAutoScalingGroupRequest', 'model/CreateAutoScalingGroupResponse', 'model/CreateLaunchConfigurationRequest', 'model/CreateLaunchConfigurationResponse', 'model/DeleteAutoScalingGroupRequest', 'model/DeleteAutoScalingGroupResponse', 'model/DeleteAutoScalingLaunchConfigurationRequest', 'model/DeletePolicyRequest', 'model/DeletePolicyResponse', 'model/DeleteScheduledActionRequest', 'model/DeleteScheduledActionResponse', 'model/ExecutePolicyRequest', 'model/ExecutePolicyResponse', 'model/GetAdjustmentTypeListRequest', 'model/GetAdjustmentTypeListResponse', 'model/GetAutoScalingActivityLogListRequest', 'model/GetAutoScalingActivityLogListResponse', 'model/GetAutoScalingConfigurationLogListRequest', 'model/GetAutoScalingConfigurationLogListResponse', 'model/GetAutoScalingGroupListRequest', 'model/GetAutoScalingGroupListResponse', 'model/GetAutoScalingPolicyListRequest', 'model/GetAutoScalingPolicyListResponse', 'model/GetLaunchConfigurationListRequest', 'model/GetLaunchConfigurationListResponse', 'model/GetScalingProcessTypeListRequest', 'model/GetScalingProcessTypeListResponse', 'model/GetScheduledActionListRequest', 'model/GetScheduledActionListResponse', 'model/PutScalingPolicyRequest', 'model/PutScalingPolicyResponse', 'model/PutScheduledUpdateGroupActionRequest', 'model/PutScheduledUpdateGroupActionResponse', 'model/ResumeProcessesRequest', 'model/ResumeProcessesResponse', 'model/SetDesiredCapacityRequest', 'model/SetDesiredCapacityResponse', 'model/SetServerInstanceHealthRequest', 'model/SetServerInstanceHealthResponse', 'model/SuspendProcessesRequest', 'model/SuspendProcessesResponse', 'model/TerminateServerInstanceInAutoScalingGroupRequest', 'model/TerminateServerInstanceInAutoScalingGroupResponse', 'model/UpdateAutoScalingGroupRequest', 'model/UpdateAutoScalingGroupResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreateAutoScalingGroupRequest'), require('../model/CreateAutoScalingGroupResponse'), require('../model/CreateLaunchConfigurationRequest'), require('../model/CreateLaunchConfigurationResponse'), require('../model/DeleteAutoScalingGroupRequest'), require('../model/DeleteAutoScalingGroupResponse'), require('../model/DeleteAutoScalingLaunchConfigurationRequest'), require('../model/DeletePolicyRequest'), require('../model/DeletePolicyResponse'), require('../model/DeleteScheduledActionRequest'), require('../model/DeleteScheduledActionResponse'), require('../model/ExecutePolicyRequest'), require('../model/ExecutePolicyResponse'), require('../model/GetAdjustmentTypeListRequest'), require('../model/GetAdjustmentTypeListResponse'), require('../model/GetAutoScalingActivityLogListRequest'), require('../model/GetAutoScalingActivityLogListResponse'), require('../model/GetAutoScalingConfigurationLogListRequest'), require('../model/GetAutoScalingConfigurationLogListResponse'), require('../model/GetAutoScalingGroupListRequest'), require('../model/GetAutoScalingGroupListResponse'), require('../model/GetAutoScalingPolicyListRequest'), require('../model/GetAutoScalingPolicyListResponse'), require('../model/GetLaunchConfigurationListRequest'), require('../model/GetLaunchConfigurationListResponse'), require('../model/GetScalingProcessTypeListRequest'), require('../model/GetScalingProcessTypeListResponse'), require('../model/GetScheduledActionListRequest'), require('../model/GetScheduledActionListResponse'), require('../model/PutScalingPolicyRequest'), require('../model/PutScalingPolicyResponse'), require('../model/PutScheduledUpdateGroupActionRequest'), require('../model/PutScheduledUpdateGroupActionResponse'), require('../model/ResumeProcessesRequest'), require('../model/ResumeProcessesResponse'), require('../model/SetDesiredCapacityRequest'), require('../model/SetDesiredCapacityResponse'), require('../model/SetServerInstanceHealthRequest'), require('../model/SetServerInstanceHealthResponse'), require('../model/SuspendProcessesRequest'), require('../model/SuspendProcessesResponse'), require('../model/TerminateServerInstanceInAutoScalingGroupRequest'), require('../model/TerminateServerInstanceInAutoScalingGroupResponse'), require('../model/UpdateAutoScalingGroupRequest'), require('../model/UpdateAutoScalingGroupResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Autoscaling) {
      root.Autoscaling = {};
    }
    root.Autoscaling.V2Api = factory(root.Autoscaling.ApiClient, root.Autoscaling.CreateAutoScalingGroupRequest, root.Autoscaling.CreateAutoScalingGroupResponse, root.Autoscaling.CreateLaunchConfigurationRequest, root.Autoscaling.CreateLaunchConfigurationResponse, root.Autoscaling.DeleteAutoScalingGroupRequest, root.Autoscaling.DeleteAutoScalingGroupResponse, root.Autoscaling.DeleteAutoScalingLaunchConfigurationRequest, root.Autoscaling.DeletePolicyRequest, root.Autoscaling.DeletePolicyResponse, root.Autoscaling.DeleteScheduledActionRequest, root.Autoscaling.DeleteScheduledActionResponse, root.Autoscaling.ExecutePolicyRequest, root.Autoscaling.ExecutePolicyResponse, root.Autoscaling.GetAdjustmentTypeListRequest, root.Autoscaling.GetAdjustmentTypeListResponse, root.Autoscaling.GetAutoScalingActivityLogListRequest, root.Autoscaling.GetAutoScalingActivityLogListResponse, root.Autoscaling.GetAutoScalingConfigurationLogListRequest, root.Autoscaling.GetAutoScalingConfigurationLogListResponse, root.Autoscaling.GetAutoScalingGroupListRequest, root.Autoscaling.GetAutoScalingGroupListResponse, root.Autoscaling.GetAutoScalingPolicyListRequest, root.Autoscaling.GetAutoScalingPolicyListResponse, root.Autoscaling.GetLaunchConfigurationListRequest, root.Autoscaling.GetLaunchConfigurationListResponse, root.Autoscaling.GetScalingProcessTypeListRequest, root.Autoscaling.GetScalingProcessTypeListResponse, root.Autoscaling.GetScheduledActionListRequest, root.Autoscaling.GetScheduledActionListResponse, root.Autoscaling.PutScalingPolicyRequest, root.Autoscaling.PutScalingPolicyResponse, root.Autoscaling.PutScheduledUpdateGroupActionRequest, root.Autoscaling.PutScheduledUpdateGroupActionResponse, root.Autoscaling.ResumeProcessesRequest, root.Autoscaling.ResumeProcessesResponse, root.Autoscaling.SetDesiredCapacityRequest, root.Autoscaling.SetDesiredCapacityResponse, root.Autoscaling.SetServerInstanceHealthRequest, root.Autoscaling.SetServerInstanceHealthResponse, root.Autoscaling.SuspendProcessesRequest, root.Autoscaling.SuspendProcessesResponse, root.Autoscaling.TerminateServerInstanceInAutoScalingGroupRequest, root.Autoscaling.TerminateServerInstanceInAutoScalingGroupResponse, root.Autoscaling.UpdateAutoScalingGroupRequest, root.Autoscaling.UpdateAutoScalingGroupResponse);
  }
}(this, function(ApiClient, CreateAutoScalingGroupRequest, CreateAutoScalingGroupResponse, CreateLaunchConfigurationRequest, CreateLaunchConfigurationResponse, DeleteAutoScalingGroupRequest, DeleteAutoScalingGroupResponse, DeleteAutoScalingLaunchConfigurationRequest, DeletePolicyRequest, DeletePolicyResponse, DeleteScheduledActionRequest, DeleteScheduledActionResponse, ExecutePolicyRequest, ExecutePolicyResponse, GetAdjustmentTypeListRequest, GetAdjustmentTypeListResponse, GetAutoScalingActivityLogListRequest, GetAutoScalingActivityLogListResponse, GetAutoScalingConfigurationLogListRequest, GetAutoScalingConfigurationLogListResponse, GetAutoScalingGroupListRequest, GetAutoScalingGroupListResponse, GetAutoScalingPolicyListRequest, GetAutoScalingPolicyListResponse, GetLaunchConfigurationListRequest, GetLaunchConfigurationListResponse, GetScalingProcessTypeListRequest, GetScalingProcessTypeListResponse, GetScheduledActionListRequest, GetScheduledActionListResponse, PutScalingPolicyRequest, PutScalingPolicyResponse, PutScheduledUpdateGroupActionRequest, PutScheduledUpdateGroupActionResponse, ResumeProcessesRequest, ResumeProcessesResponse, SetDesiredCapacityRequest, SetDesiredCapacityResponse, SetServerInstanceHealthRequest, SetServerInstanceHealthResponse, SuspendProcessesRequest, SuspendProcessesResponse, TerminateServerInstanceInAutoScalingGroupRequest, TerminateServerInstanceInAutoScalingGroupResponse, UpdateAutoScalingGroupRequest, UpdateAutoScalingGroupResponse) {
  'use strict';

  /**
   * V2 service.
   * @module api/V2Api
   * @version 1.4.1
   */

  /**
   * Constructs a new V2Api. 
   * @alias module:api/V2Api
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createAutoScalingGroup operation.
     * @callback module:api/V2Api~createAutoScalingGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAutoScalingGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.오토스케일링그룹생성
     * @param {module:model/CreateAutoScalingGroupRequest} createAutoScalingGroupRequest createAutoScalingGroupRequest
     * @param {module:api/V2Api~createAutoScalingGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAutoScalingGroupResponse}
     */
    this.createAutoScalingGroup = function(createAutoScalingGroupRequest, callback) {
      var postBody = createAutoScalingGroupRequest;

      // verify the required parameter 'createAutoScalingGroupRequest' is set
      if (createAutoScalingGroupRequest === undefined || createAutoScalingGroupRequest === null) {
        throw new Error("Missing the required parameter 'createAutoScalingGroupRequest' when calling createAutoScalingGroup");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = CreateAutoScalingGroupResponse;

      return this.apiClient.callApi(
        '/createAutoScalingGroup', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createLaunchConfiguration operation.
     * @callback module:api/V2Api~createLaunchConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateLaunchConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * A.론치설정생성
     * @param {module:model/CreateLaunchConfigurationRequest} createLaunchConfigurationRequest createLaunchConfigurationRequest
     * @param {module:api/V2Api~createLaunchConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateLaunchConfigurationResponse}
     */
    this.createLaunchConfiguration = function(createLaunchConfigurationRequest, callback) {
      var postBody = createLaunchConfigurationRequest;

      // verify the required parameter 'createLaunchConfigurationRequest' is set
      if (createLaunchConfigurationRequest === undefined || createLaunchConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'createLaunchConfigurationRequest' when calling createLaunchConfiguration");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = CreateLaunchConfigurationResponse;

      return this.apiClient.callApi(
        '/createLaunchConfiguration', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAutoScalingGroup operation.
     * @callback module:api/V2Api~deleteAutoScalingGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAutoScalingGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.오토스케일링그룹삭제
     * @param {module:model/DeleteAutoScalingGroupRequest} deleteAutoScalingGroupRequest deleteAutoScalingGroupRequest
     * @param {module:api/V2Api~deleteAutoScalingGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAutoScalingGroupResponse}
     */
    this.deleteAutoScalingGroup = function(deleteAutoScalingGroupRequest, callback) {
      var postBody = deleteAutoScalingGroupRequest;

      // verify the required parameter 'deleteAutoScalingGroupRequest' is set
      if (deleteAutoScalingGroupRequest === undefined || deleteAutoScalingGroupRequest === null) {
        throw new Error("Missing the required parameter 'deleteAutoScalingGroupRequest' when calling deleteAutoScalingGroup");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = DeleteAutoScalingGroupResponse;

      return this.apiClient.callApi(
        '/deleteAutoScalingGroup', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAutoScalingLaunchConfiguration operation.
     * @callback module:api/V2Api~deleteAutoScalingLaunchConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAutoScalingLaunchConfigurationRequest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * A.오토스케일링론치설정삭제
     * @param {module:model/DeleteAutoScalingLaunchConfigurationRequest} deleteAutoScalingLaunchConfigurationRequest deleteAutoScalingLaunchConfigurationRequest
     * @param {module:api/V2Api~deleteAutoScalingLaunchConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAutoScalingLaunchConfigurationRequest}
     */
    this.deleteAutoScalingLaunchConfiguration = function(deleteAutoScalingLaunchConfigurationRequest, callback) {
      var postBody = deleteAutoScalingLaunchConfigurationRequest;

      // verify the required parameter 'deleteAutoScalingLaunchConfigurationRequest' is set
      if (deleteAutoScalingLaunchConfigurationRequest === undefined || deleteAutoScalingLaunchConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'deleteAutoScalingLaunchConfigurationRequest' when calling deleteAutoScalingLaunchConfiguration");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = DeleteAutoScalingLaunchConfigurationRequest;

      return this.apiClient.callApi(
        '/deleteAutoScalingLaunchConfiguration', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePolicy operation.
     * @callback module:api/V2Api~deletePolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * F.스케일링정책삭제
     * @param {module:model/DeletePolicyRequest} deletePolicyRequest deletePolicyRequest
     * @param {module:api/V2Api~deletePolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePolicyResponse}
     */
    this.deletePolicy = function(deletePolicyRequest, callback) {
      var postBody = deletePolicyRequest;

      // verify the required parameter 'deletePolicyRequest' is set
      if (deletePolicyRequest === undefined || deletePolicyRequest === null) {
        throw new Error("Missing the required parameter 'deletePolicyRequest' when calling deletePolicy");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = DeletePolicyResponse;

      return this.apiClient.callApi(
        '/deletePolicy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteScheduledAction operation.
     * @callback module:api/V2Api~deleteScheduledActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteScheduledActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * C.스케쥴액션삭제
     * @param {module:model/DeleteScheduledActionRequest} deleteScheduledActionRequest deleteScheduledActionRequest
     * @param {module:api/V2Api~deleteScheduledActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteScheduledActionResponse}
     */
    this.deleteScheduledAction = function(deleteScheduledActionRequest, callback) {
      var postBody = deleteScheduledActionRequest;

      // verify the required parameter 'deleteScheduledActionRequest' is set
      if (deleteScheduledActionRequest === undefined || deleteScheduledActionRequest === null) {
        throw new Error("Missing the required parameter 'deleteScheduledActionRequest' when calling deleteScheduledAction");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = DeleteScheduledActionResponse;

      return this.apiClient.callApi(
        '/deleteScheduledAction', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the executePolicy operation.
     * @callback module:api/V2Api~executePolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExecutePolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * F.스케일링정책수행
     * @param {module:model/ExecutePolicyRequest} executePolicyRequest executePolicyRequest
     * @param {module:api/V2Api~executePolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExecutePolicyResponse}
     */
    this.executePolicy = function(executePolicyRequest, callback) {
      var postBody = executePolicyRequest;

      // verify the required parameter 'executePolicyRequest' is set
      if (executePolicyRequest === undefined || executePolicyRequest === null) {
        throw new Error("Missing the required parameter 'executePolicyRequest' when calling executePolicy");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = ExecutePolicyResponse;

      return this.apiClient.callApi(
        '/executePolicy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAdjustmentTypeList operation.
     * @callback module:api/V2Api~getAdjustmentTypeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAdjustmentTypeListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * F.조정유형리스트조회
     * @param {module:model/GetAdjustmentTypeListRequest} getAdjustmentTypeListRequest getAdjustmentTypeListRequest
     * @param {module:api/V2Api~getAdjustmentTypeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAdjustmentTypeListResponse}
     */
    this.getAdjustmentTypeList = function(getAdjustmentTypeListRequest, callback) {
      var postBody = getAdjustmentTypeListRequest;

      // verify the required parameter 'getAdjustmentTypeListRequest' is set
      if (getAdjustmentTypeListRequest === undefined || getAdjustmentTypeListRequest === null) {
        throw new Error("Missing the required parameter 'getAdjustmentTypeListRequest' when calling getAdjustmentTypeList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetAdjustmentTypeListResponse;

      return this.apiClient.callApi(
        '/getAdjustmentTypeList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAutoScalingActivityLogList operation.
     * @callback module:api/V2Api~getAutoScalingActivityLogListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAutoScalingActivityLogListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * E.액티비티로그리스트조회
     * @param {module:model/GetAutoScalingActivityLogListRequest} getAutoScalingActivityLogListRequest getAutoScalingActivityLogListRequest
     * @param {module:api/V2Api~getAutoScalingActivityLogListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAutoScalingActivityLogListResponse}
     */
    this.getAutoScalingActivityLogList = function(getAutoScalingActivityLogListRequest, callback) {
      var postBody = getAutoScalingActivityLogListRequest;

      // verify the required parameter 'getAutoScalingActivityLogListRequest' is set
      if (getAutoScalingActivityLogListRequest === undefined || getAutoScalingActivityLogListRequest === null) {
        throw new Error("Missing the required parameter 'getAutoScalingActivityLogListRequest' when calling getAutoScalingActivityLogList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetAutoScalingActivityLogListResponse;

      return this.apiClient.callApi(
        '/getAutoScalingActivityLogList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAutoScalingConfigurationLogList operation.
     * @callback module:api/V2Api~getAutoScalingConfigurationLogListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAutoScalingConfigurationLogListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * E.오토스케일링설정로그리스트조회
     * @param {module:model/GetAutoScalingConfigurationLogListRequest} getAutoScalingConfigurationLogListRequest getAutoScalingConfigurationLogListRequest
     * @param {module:api/V2Api~getAutoScalingConfigurationLogListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAutoScalingConfigurationLogListResponse}
     */
    this.getAutoScalingConfigurationLogList = function(getAutoScalingConfigurationLogListRequest, callback) {
      var postBody = getAutoScalingConfigurationLogListRequest;

      // verify the required parameter 'getAutoScalingConfigurationLogListRequest' is set
      if (getAutoScalingConfigurationLogListRequest === undefined || getAutoScalingConfigurationLogListRequest === null) {
        throw new Error("Missing the required parameter 'getAutoScalingConfigurationLogListRequest' when calling getAutoScalingConfigurationLogList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetAutoScalingConfigurationLogListResponse;

      return this.apiClient.callApi(
        '/getAutoScalingConfigurationLogList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAutoScalingGroupList operation.
     * @callback module:api/V2Api~getAutoScalingGroupListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAutoScalingGroupListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.오토스케일링그룹리스트조회
     * @param {module:model/GetAutoScalingGroupListRequest} getAutoScalingGroupListRequest getAutoScalingGroupListRequest
     * @param {module:api/V2Api~getAutoScalingGroupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAutoScalingGroupListResponse}
     */
    this.getAutoScalingGroupList = function(getAutoScalingGroupListRequest, callback) {
      var postBody = getAutoScalingGroupListRequest;

      // verify the required parameter 'getAutoScalingGroupListRequest' is set
      if (getAutoScalingGroupListRequest === undefined || getAutoScalingGroupListRequest === null) {
        throw new Error("Missing the required parameter 'getAutoScalingGroupListRequest' when calling getAutoScalingGroupList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetAutoScalingGroupListResponse;

      return this.apiClient.callApi(
        '/getAutoScalingGroupList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAutoScalingPolicyList operation.
     * @callback module:api/V2Api~getAutoScalingPolicyListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAutoScalingPolicyListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * F.오토스케일링정책리스트조회
     * @param {module:model/GetAutoScalingPolicyListRequest} getAutoScalingPolicyListRequest getAutoScalingPolicyListRequest
     * @param {module:api/V2Api~getAutoScalingPolicyListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAutoScalingPolicyListResponse}
     */
    this.getAutoScalingPolicyList = function(getAutoScalingPolicyListRequest, callback) {
      var postBody = getAutoScalingPolicyListRequest;

      // verify the required parameter 'getAutoScalingPolicyListRequest' is set
      if (getAutoScalingPolicyListRequest === undefined || getAutoScalingPolicyListRequest === null) {
        throw new Error("Missing the required parameter 'getAutoScalingPolicyListRequest' when calling getAutoScalingPolicyList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetAutoScalingPolicyListResponse;

      return this.apiClient.callApi(
        '/getAutoScalingPolicyList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getLaunchConfigurationList operation.
     * @callback module:api/V2Api~getLaunchConfigurationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetLaunchConfigurationListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * A.론치설정리스트조회
     * @param {module:model/GetLaunchConfigurationListRequest} getLaunchConfigurationListRequest getLaunchConfigurationListRequest
     * @param {module:api/V2Api~getLaunchConfigurationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetLaunchConfigurationListResponse}
     */
    this.getLaunchConfigurationList = function(getLaunchConfigurationListRequest, callback) {
      var postBody = getLaunchConfigurationListRequest;

      // verify the required parameter 'getLaunchConfigurationListRequest' is set
      if (getLaunchConfigurationListRequest === undefined || getLaunchConfigurationListRequest === null) {
        throw new Error("Missing the required parameter 'getLaunchConfigurationListRequest' when calling getLaunchConfigurationList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetLaunchConfigurationListResponse;

      return this.apiClient.callApi(
        '/getLaunchConfigurationList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getScalingProcessTypeList operation.
     * @callback module:api/V2Api~getScalingProcessTypeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetScalingProcessTypeListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * D.프로세스구분리스트조회
     * @param {module:model/GetScalingProcessTypeListRequest} getScalingProcessTypeListRequest getScalingProcessTypeListRequest
     * @param {module:api/V2Api~getScalingProcessTypeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetScalingProcessTypeListResponse}
     */
    this.getScalingProcessTypeList = function(getScalingProcessTypeListRequest, callback) {
      var postBody = getScalingProcessTypeListRequest;

      // verify the required parameter 'getScalingProcessTypeListRequest' is set
      if (getScalingProcessTypeListRequest === undefined || getScalingProcessTypeListRequest === null) {
        throw new Error("Missing the required parameter 'getScalingProcessTypeListRequest' when calling getScalingProcessTypeList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetScalingProcessTypeListResponse;

      return this.apiClient.callApi(
        '/getScalingProcessTypeList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getScheduledActionList operation.
     * @callback module:api/V2Api~getScheduledActionListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetScheduledActionListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * C.스케쥴액션리스트조회
     * @param {module:model/GetScheduledActionListRequest} getScheduledActionListRequest getScheduledActionListRequest
     * @param {module:api/V2Api~getScheduledActionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetScheduledActionListResponse}
     */
    this.getScheduledActionList = function(getScheduledActionListRequest, callback) {
      var postBody = getScheduledActionListRequest;

      // verify the required parameter 'getScheduledActionListRequest' is set
      if (getScheduledActionListRequest === undefined || getScheduledActionListRequest === null) {
        throw new Error("Missing the required parameter 'getScheduledActionListRequest' when calling getScheduledActionList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = GetScheduledActionListResponse;

      return this.apiClient.callApi(
        '/getScheduledActionList', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putScalingPolicy operation.
     * @callback module:api/V2Api~putScalingPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutScalingPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * F.스케일링정책생성/변경
     * @param {module:model/PutScalingPolicyRequest} putScalingPolicyRequest putScalingPolicyRequest
     * @param {module:api/V2Api~putScalingPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutScalingPolicyResponse}
     */
    this.putScalingPolicy = function(putScalingPolicyRequest, callback) {
      var postBody = putScalingPolicyRequest;

      // verify the required parameter 'putScalingPolicyRequest' is set
      if (putScalingPolicyRequest === undefined || putScalingPolicyRequest === null) {
        throw new Error("Missing the required parameter 'putScalingPolicyRequest' when calling putScalingPolicy");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = PutScalingPolicyResponse;

      return this.apiClient.callApi(
        '/putScalingPolicy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putScheduledUpdateGroupAction operation.
     * @callback module:api/V2Api~putScheduledUpdateGroupActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutScheduledUpdateGroupActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * C.스케쥴액션생성|수정
     * @param {module:model/PutScheduledUpdateGroupActionRequest} putScheduledUpdateGroupActionRequest putScheduledUpdateGroupActionRequest
     * @param {module:api/V2Api~putScheduledUpdateGroupActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutScheduledUpdateGroupActionResponse}
     */
    this.putScheduledUpdateGroupAction = function(putScheduledUpdateGroupActionRequest, callback) {
      var postBody = putScheduledUpdateGroupActionRequest;

      // verify the required parameter 'putScheduledUpdateGroupActionRequest' is set
      if (putScheduledUpdateGroupActionRequest === undefined || putScheduledUpdateGroupActionRequest === null) {
        throw new Error("Missing the required parameter 'putScheduledUpdateGroupActionRequest' when calling putScheduledUpdateGroupAction");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = PutScheduledUpdateGroupActionResponse;

      return this.apiClient.callApi(
        '/putScheduledUpdateGroupAction', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the resumeProcesses operation.
     * @callback module:api/V2Api~resumeProcessesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResumeProcessesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * D.프로세스재개
     * @param {module:model/ResumeProcessesRequest} resumeProcessesRequest resumeProcessesRequest
     * @param {module:api/V2Api~resumeProcessesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResumeProcessesResponse}
     */
    this.resumeProcesses = function(resumeProcessesRequest, callback) {
      var postBody = resumeProcessesRequest;

      // verify the required parameter 'resumeProcessesRequest' is set
      if (resumeProcessesRequest === undefined || resumeProcessesRequest === null) {
        throw new Error("Missing the required parameter 'resumeProcessesRequest' when calling resumeProcesses");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = ResumeProcessesResponse;

      return this.apiClient.callApi(
        '/resumeProcesses', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setDesiredCapacity operation.
     * @callback module:api/V2Api~setDesiredCapacityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SetDesiredCapacityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.기대용량치갱신
     * @param {module:model/SetDesiredCapacityRequest} setDesiredCapacityRequest setDesiredCapacityRequest
     * @param {module:api/V2Api~setDesiredCapacityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SetDesiredCapacityResponse}
     */
    this.setDesiredCapacity = function(setDesiredCapacityRequest, callback) {
      var postBody = setDesiredCapacityRequest;

      // verify the required parameter 'setDesiredCapacityRequest' is set
      if (setDesiredCapacityRequest === undefined || setDesiredCapacityRequest === null) {
        throw new Error("Missing the required parameter 'setDesiredCapacityRequest' when calling setDesiredCapacity");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = SetDesiredCapacityResponse;

      return this.apiClient.callApi(
        '/setDesiredCapacity', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setServerInstanceHealth operation.
     * @callback module:api/V2Api~setServerInstanceHealthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SetServerInstanceHealthResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.서버인스턴스헬스상태갱신
     * @param {module:model/SetServerInstanceHealthRequest} setServerInstanceHealthRequest setServerInstanceHealthRequest
     * @param {module:api/V2Api~setServerInstanceHealthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SetServerInstanceHealthResponse}
     */
    this.setServerInstanceHealth = function(setServerInstanceHealthRequest, callback) {
      var postBody = setServerInstanceHealthRequest;

      // verify the required parameter 'setServerInstanceHealthRequest' is set
      if (setServerInstanceHealthRequest === undefined || setServerInstanceHealthRequest === null) {
        throw new Error("Missing the required parameter 'setServerInstanceHealthRequest' when calling setServerInstanceHealth");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = SetServerInstanceHealthResponse;

      return this.apiClient.callApi(
        '/setServerInstanceHealth', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the suspendProcesses operation.
     * @callback module:api/V2Api~suspendProcessesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuspendProcessesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * D.프로세스보류
     * @param {module:model/SuspendProcessesRequest} suspendProcessesRequest suspendProcessesRequest
     * @param {module:api/V2Api~suspendProcessesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuspendProcessesResponse}
     */
    this.suspendProcesses = function(suspendProcessesRequest, callback) {
      var postBody = suspendProcessesRequest;

      // verify the required parameter 'suspendProcessesRequest' is set
      if (suspendProcessesRequest === undefined || suspendProcessesRequest === null) {
        throw new Error("Missing the required parameter 'suspendProcessesRequest' when calling suspendProcesses");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = SuspendProcessesResponse;

      return this.apiClient.callApi(
        '/suspendProcesses', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the terminateServerInstanceInAutoScalingGroup operation.
     * @callback module:api/V2Api~terminateServerInstanceInAutoScalingGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminateServerInstanceInAutoScalingGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.오토스케일링그룹에속한서버인스턴스삭제
     * @param {module:model/TerminateServerInstanceInAutoScalingGroupRequest} terminateServerInstanceInAutoScalingGroupRequest terminateServerInstanceInAutoScalingGroupRequest
     * @param {module:api/V2Api~terminateServerInstanceInAutoScalingGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminateServerInstanceInAutoScalingGroupResponse}
     */
    this.terminateServerInstanceInAutoScalingGroup = function(terminateServerInstanceInAutoScalingGroupRequest, callback) {
      var postBody = terminateServerInstanceInAutoScalingGroupRequest;

      // verify the required parameter 'terminateServerInstanceInAutoScalingGroupRequest' is set
      if (terminateServerInstanceInAutoScalingGroupRequest === undefined || terminateServerInstanceInAutoScalingGroupRequest === null) {
        throw new Error("Missing the required parameter 'terminateServerInstanceInAutoScalingGroupRequest' when calling terminateServerInstanceInAutoScalingGroup");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = TerminateServerInstanceInAutoScalingGroupResponse;

      return this.apiClient.callApi(
        '/terminateServerInstanceInAutoScalingGroup', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAutoScalingGroup operation.
     * @callback module:api/V2Api~updateAutoScalingGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAutoScalingGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * B.오토스케일링그룹수정
     * @param {module:model/UpdateAutoScalingGroupRequest} updateAutoScalingGroupRequest updateAutoScalingGroupRequest
     * @param {module:api/V2Api~updateAutoScalingGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAutoScalingGroupResponse}
     */
    this.updateAutoScalingGroup = function(updateAutoScalingGroupRequest, callback) {
      var postBody = updateAutoScalingGroupRequest;

      // verify the required parameter 'updateAutoScalingGroupRequest' is set
      if (updateAutoScalingGroupRequest === undefined || updateAutoScalingGroupRequest === null) {
        throw new Error("Missing the required parameter 'updateAutoScalingGroupRequest' when calling updateAutoScalingGroup");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['x-ncp-iam'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = [];
      var returnType = UpdateAutoScalingGroupResponse;

      return this.apiClient.callApi(
        '/updateAutoScalingGroup', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
